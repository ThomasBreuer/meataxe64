gap> START_TEST("echelize.tst");
gap> Read(Filename(DirectoriesPackageLibrary("meataxe64","tst"),"testutils.g"));
gap> f := MTX64_FiniteField(3);
<MTX64 GF(3)>
gap> repeat m := MTX64_RandomMat(f,1000,1000); until RankMat(m) = 1000;
gap> m1 := ShallowCopy(m);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> m1[2] := m1[1];
< mutable compressed vector length 1000 over GF(3) >
gap> RankMat(m1);
999
gap> m1^-1;
fail
gap> m1 := ShallowCopy(m);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> m1[1000] := m1[1];
< mutable compressed vector length 1000 over GF(3) >
gap> RankMat(m1);
999
gap> m1^-1;               
fail
gap> for x in [[2,1000,2000],[3,2000,1000],[5,100,100],
>        [9,450,451],[13,100,110],[17, 250,200], [181, 500,501],
>        [257,300,310], [65537, 310, 300], [2^24, 20, 30],
>        [NextPrimeInt(2^32), 30,20], [11,1,1],[23,0,1],[16,1,0]] do
>         testEchelize(x[2],x[3],x[1], MTX64_Echelize_DefaultOptions);
>    od;
gap> Reset(GlobalMersenneTwister, 3);;
gap> m := MakeEchTestMatrix(GF(11^2), 1000,600);
< matrix 1000x1000 : <MTX64 GF(11^2)>>
gap> RankMat(m);
625
gap> e := MTX64_Echelize(m);
rec( cleaner := < matrix 375x625 : <MTX64 GF(11^2)>>, 
  colSelect := < MTX64 bitstring 625/1000>, det := <106 : <MTX64 GF(11^2)>>, 
  multiplier := < matrix 625x625 : <MTX64 GF(11^2)>>, rank := 625, 
  remnant := < matrix 625x375 : <MTX64 GF(11^2)>>, 
  rowSelect := < MTX64 bitstring 625/1000> )
gap> m2 := MakeEchTestMatrix(GF(11^2), 1000,600);
< matrix 1000x1000 : <MTX64 GF(11^2)>>
gap> MTX64_CleanExtend(e, m2);
< MTX64 bitstring 375/1000>
gap> e;
rec( cleaner := < matrix 1000x1000 : <MTX64 GF(11^2)>>, 
  colSelect := < MTX64 bitstring 1000/1000>, det := <106 : <MTX64 GF(11^2)>>, 
  multiplier := < matrix 1000x1000 : <MTX64 GF(11^2)>>, rank := 1000, 
  remnant := < matrix 1000x0 : <MTX64 GF(11^2)>>, 
  rowSelect := < MTX64 bitstring 1000/2000> )
gap> MTX64_GAPEchelize(MTX64_Matrix(Z(2)*[[0,0],[1,0]], 2), rec(failIfSingular := true));
fail
gap> Reset(GlobalMersenneTwister, 5);;
gap> f := MTX64_FiniteField(3);
<MTX64 GF(3)>
gap> m := MakeSparseMatrix(f,1000,1000,2);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> MTX64_GAPEchelize(m);
rec( cleaner := < matrix 308x692 : <MTX64 GF(3)>>, 
  colSelect := < MTX64 bitstring 692/1000>, 
  multiplier := < matrix 692x692 : <MTX64 GF(3)>>, rank := 692, 
  remnant := < matrix 692x308 : <MTX64 GF(3)>>, 
  rowSelect := < MTX64 bitstring 692/1000> )
gap> NullspaceMat(m);
< matrix 308x1000 : <MTX64 GF(3)>>
gap> n := NullspaceMat(m);
< matrix 308x1000 : <MTX64 GF(3)>>
gap> IsZero(n*m);
true
gap> SemiEchelonMatTransformation(m);
rec( coeffs := < matrix 692x1000 : <MTX64 GF(3)>>, 
  heads := [ 1, 0, 2, 3, 4, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 
      16, 17, 18, 0, 0, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 0, 0, 36, 37, 38, 0, 39, 40, 41, 42, 43, 0, 0, 44, 
      0, 0, 0, 0, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 0, 0, 55, 0, 0, 
      56, 0, 0, 57, 58, 0, 59, 60, 61, 62, 63, 64, 0, 0, 65, 66, 67, 68, 69, 
      0, 70, 71, 0, 72, 0, 73, 74, 75, 0, 76, 77, 78, 79, 0, 0, 80, 81, 82, 
      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100, 0, 101, 0, 102, 103, 104, 0, 105, 106, 107, 108, 109, 110, 111, 0, 
      112, 113, 114, 0, 115, 116, 0, 117, 0, 0, 118, 119, 120, 121, 122, 123, 
      0, 124, 125, 126, 127, 0, 128, 129, 0, 130, 0, 0, 131, 132, 133, 134, 
      135, 136, 137, 0, 138, 0, 139, 140, 0, 141, 142, 143, 144, 145, 0, 0, 
      146, 147, 148, 149, 150, 0, 151, 152, 0, 153, 154, 155, 156, 157, 0, 
      158, 159, 160, 161, 0, 162, 0, 163, 164, 165, 166, 0, 167, 168, 169, 
      170, 0, 0, 171, 0, 172, 173, 174, 0, 175, 176, 177, 178, 179, 180, 181, 
      0, 182, 0, 183, 0, 0, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 
      194, 0, 195, 196, 197, 198, 199, 0, 200, 201, 202, 203, 204, 205, 206, 
      207, 208, 209, 210, 0, 211, 212, 213, 214, 0, 215, 216, 217, 218, 0, 
      219, 0, 220, 221, 222, 223, 224, 0, 0, 225, 0, 226, 227, 228, 229, 230, 
      231, 232, 0, 233, 0, 234, 0, 235, 236, 237, 0, 0, 0, 0, 238, 0, 239, 
      240, 241, 0, 242, 243, 0, 244, 245, 0, 246, 247, 0, 248, 249, 250, 251, 
      0, 252, 0, 253, 254, 255, 256, 257, 258, 259, 0, 0, 260, 0, 0, 0, 261, 
      262, 263, 0, 264, 0, 265, 266, 267, 0, 268, 0, 0, 0, 269, 270, 271, 0, 
      0, 272, 273, 274, 0, 0, 275, 276, 277, 278, 0, 279, 0, 280, 0, 281, 
      282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 0, 293, 0, 294, 
      295, 0, 296, 297, 0, 298, 299, 300, 301, 0, 0, 0, 302, 303, 304, 305, 
      306, 307, 308, 0, 309, 310, 311, 0, 312, 313, 0, 314, 0, 315, 0, 316, 
      317, 318, 319, 320, 321, 322, 0, 323, 324, 0, 0, 325, 326, 0, 327, 328, 
      329, 330, 331, 0, 332, 0, 0, 333, 0, 0, 334, 335, 0, 336, 337, 338, 
      339, 340, 341, 342, 0, 343, 344, 345, 0, 346, 0, 0, 347, 348, 0, 349, 
      350, 0, 351, 352, 0, 353, 354, 355, 356, 357, 358, 359, 0, 0, 0, 360, 
      361, 362, 363, 364, 365, 0, 366, 367, 0, 368, 0, 0, 369, 370, 371, 0, 
      372, 373, 0, 0, 0, 374, 375, 0, 376, 0, 377, 0, 378, 379, 0, 380, 381, 
      382, 383, 0, 0, 0, 384, 385, 386, 387, 388, 389, 390, 0, 0, 391, 392, 
      393, 394, 0, 395, 396, 397, 0, 0, 398, 0, 399, 0, 400, 0, 0, 401, 402, 
      0, 403, 404, 405, 0, 406, 407, 408, 0, 0, 409, 410, 0, 411, 412, 413, 
      414, 415, 416, 0, 0, 0, 417, 418, 419, 0, 420, 421, 0, 422, 0, 423, 
      424, 0, 425, 0, 426, 427, 428, 0, 429, 430, 431, 432, 433, 0, 434, 0, 
      435, 436, 0, 0, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
      448, 449, 450, 451, 0, 452, 453, 454, 0, 0, 455, 0, 456, 457, 0, 0, 
      458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 0, 470, 
      471, 472, 0, 0, 473, 474, 475, 476, 0, 477, 0, 478, 479, 0, 480, 0, 
      481, 482, 0, 483, 484, 0, 0, 485, 486, 487, 0, 488, 0, 489, 490, 0, 
      491, 0, 0, 492, 493, 494, 495, 0, 0, 496, 497, 498, 0, 0, 0, 499, 500, 
      501, 0, 502, 0, 503, 504, 505, 0, 506, 507, 508, 509, 510, 511, 0, 512, 
      513, 514, 515, 516, 0, 517, 518, 519, 0, 0, 520, 521, 522, 0, 523, 524, 
      525, 0, 526, 527, 528, 529, 530, 531, 0, 0, 532, 533, 534, 535, 0, 0, 
      0, 536, 537, 0, 538, 539, 540, 0, 0, 541, 0, 542, 543, 544, 545, 546, 
      0, 547, 0, 0, 548, 549, 0, 550, 551, 0, 552, 553, 554, 555, 0, 556, 
      557, 558, 0, 0, 0, 559, 0, 0, 560, 561, 562, 563, 0, 564, 0, 0, 565, 
      566, 0, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 0, 0, 0, 
      0, 0, 0, 578, 0, 579, 580, 581, 582, 583, 0, 584, 585, 586, 587, 588, 
      589, 590, 591, 0, 592, 593, 0, 0, 594, 595, 596, 597, 0, 598, 0, 599, 
      600, 601, 602, 603, 604, 605, 606, 607, 0, 608, 0, 609, 610, 611, 612, 
      613, 614, 615, 0, 616, 0, 0, 617, 618, 619, 620, 621, 622, 0, 0, 623, 
      624, 625, 626, 627, 0, 0, 628, 0, 0, 629, 0, 0, 630, 631, 0, 632, 633, 
      634, 635, 0, 636, 0, 637, 0, 638, 639, 640, 0, 641, 0, 642, 643, 644, 
      0, 0, 645, 0, 0, 0, 0, 646, 647, 648, 649, 0, 650, 651, 652, 653, 0, 0, 
      654, 655, 656, 0, 0, 0, 657, 658, 659, 0, 0, 660, 0, 661, 0, 662, 663, 
      664, 665, 666, 0, 0, 667, 0, 0, 0, 0, 668, 0, 0, 669, 670, 671, 672, 
      673, 674, 0, 0, 675, 676, 677, 0, 678, 679, 0, 0, 0, 680, 681, 682, 
      683, 684, 0, 685, 0, 686, 0, 0, 0, 687, 688, 0, 689, 0, 0, 690, 691, 
      692 ], relations := < matrix 308x1000 : <MTX64 GF(3)>>, 
  vectors := < matrix 692x1000 : <MTX64 GF(3)>> )
gap> SemiEchelonMat(m);              
rec( heads := [ 1, 0, 2, 3, 4, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
      0, 16, 17, 18, 0, 0, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 0, 0, 36, 37, 38, 0, 39, 40, 41, 42, 43, 0, 0, 44, 
      0, 0, 0, 0, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 0, 0, 55, 0, 0, 
      56, 0, 0, 57, 58, 0, 59, 60, 61, 62, 63, 64, 0, 0, 65, 66, 67, 68, 69, 
      0, 70, 71, 0, 72, 0, 73, 74, 75, 0, 76, 77, 78, 79, 0, 0, 80, 81, 82, 
      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100, 0, 101, 0, 102, 103, 104, 0, 105, 106, 107, 108, 109, 110, 111, 0, 
      112, 113, 114, 0, 115, 116, 0, 117, 0, 0, 118, 119, 120, 121, 122, 123, 
      0, 124, 125, 126, 127, 0, 128, 129, 0, 130, 0, 0, 131, 132, 133, 134, 
      135, 136, 137, 0, 138, 0, 139, 140, 0, 141, 142, 143, 144, 145, 0, 0, 
      146, 147, 148, 149, 150, 0, 151, 152, 0, 153, 154, 155, 156, 157, 0, 
      158, 159, 160, 161, 0, 162, 0, 163, 164, 165, 166, 0, 167, 168, 169, 
      170, 0, 0, 171, 0, 172, 173, 174, 0, 175, 176, 177, 178, 179, 180, 181, 
      0, 182, 0, 183, 0, 0, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 
      194, 0, 195, 196, 197, 198, 199, 0, 200, 201, 202, 203, 204, 205, 206, 
      207, 208, 209, 210, 0, 211, 212, 213, 214, 0, 215, 216, 217, 218, 0, 
      219, 0, 220, 221, 222, 223, 224, 0, 0, 225, 0, 226, 227, 228, 229, 230, 
      231, 232, 0, 233, 0, 234, 0, 235, 236, 237, 0, 0, 0, 0, 238, 0, 239, 
      240, 241, 0, 242, 243, 0, 244, 245, 0, 246, 247, 0, 248, 249, 250, 251, 
      0, 252, 0, 253, 254, 255, 256, 257, 258, 259, 0, 0, 260, 0, 0, 0, 261, 
      262, 263, 0, 264, 0, 265, 266, 267, 0, 268, 0, 0, 0, 269, 270, 271, 0, 
      0, 272, 273, 274, 0, 0, 275, 276, 277, 278, 0, 279, 0, 280, 0, 281, 
      282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 0, 293, 0, 294, 
      295, 0, 296, 297, 0, 298, 299, 300, 301, 0, 0, 0, 302, 303, 304, 305, 
      306, 307, 308, 0, 309, 310, 311, 0, 312, 313, 0, 314, 0, 315, 0, 316, 
      317, 318, 319, 320, 321, 322, 0, 323, 324, 0, 0, 325, 326, 0, 327, 328, 
      329, 330, 331, 0, 332, 0, 0, 333, 0, 0, 334, 335, 0, 336, 337, 338, 
      339, 340, 341, 342, 0, 343, 344, 345, 0, 346, 0, 0, 347, 348, 0, 349, 
      350, 0, 351, 352, 0, 353, 354, 355, 356, 357, 358, 359, 0, 0, 0, 360, 
      361, 362, 363, 364, 365, 0, 366, 367, 0, 368, 0, 0, 369, 370, 371, 0, 
      372, 373, 0, 0, 0, 374, 375, 0, 376, 0, 377, 0, 378, 379, 0, 380, 381, 
      382, 383, 0, 0, 0, 384, 385, 386, 387, 388, 389, 390, 0, 0, 391, 392, 
      393, 394, 0, 395, 396, 397, 0, 0, 398, 0, 399, 0, 400, 0, 0, 401, 402, 
      0, 403, 404, 405, 0, 406, 407, 408, 0, 0, 409, 410, 0, 411, 412, 413, 
      414, 415, 416, 0, 0, 0, 417, 418, 419, 0, 420, 421, 0, 422, 0, 423, 
      424, 0, 425, 0, 426, 427, 428, 0, 429, 430, 431, 432, 433, 0, 434, 0, 
      435, 436, 0, 0, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
      448, 449, 450, 451, 0, 452, 453, 454, 0, 0, 455, 0, 456, 457, 0, 0, 
      458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 0, 470, 
      471, 472, 0, 0, 473, 474, 475, 476, 0, 477, 0, 478, 479, 0, 480, 0, 
      481, 482, 0, 483, 484, 0, 0, 485, 486, 487, 0, 488, 0, 489, 490, 0, 
      491, 0, 0, 492, 493, 494, 495, 0, 0, 496, 497, 498, 0, 0, 0, 499, 500, 
      501, 0, 502, 0, 503, 504, 505, 0, 506, 507, 508, 509, 510, 511, 0, 512, 
      513, 514, 515, 516, 0, 517, 518, 519, 0, 0, 520, 521, 522, 0, 523, 524, 
      525, 0, 526, 527, 528, 529, 530, 531, 0, 0, 532, 533, 534, 535, 0, 0, 
      0, 536, 537, 0, 538, 539, 540, 0, 0, 541, 0, 542, 543, 544, 545, 546, 
      0, 547, 0, 0, 548, 549, 0, 550, 551, 0, 552, 553, 554, 555, 0, 556, 
      557, 558, 0, 0, 0, 559, 0, 0, 560, 561, 562, 563, 0, 564, 0, 0, 565, 
      566, 0, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 0, 0, 0, 
      0, 0, 0, 578, 0, 579, 580, 581, 582, 583, 0, 584, 585, 586, 587, 588, 
      589, 590, 591, 0, 592, 593, 0, 0, 594, 595, 596, 597, 0, 598, 0, 599, 
      600, 601, 602, 603, 604, 605, 606, 607, 0, 608, 0, 609, 610, 611, 612, 
      613, 614, 615, 0, 616, 0, 0, 617, 618, 619, 620, 621, 622, 0, 0, 623, 
      624, 625, 626, 627, 0, 0, 628, 0, 0, 629, 0, 0, 630, 631, 0, 632, 633, 
      634, 635, 0, 636, 0, 637, 0, 638, 639, 640, 0, 641, 0, 642, 643, 644, 
      0, 0, 645, 0, 0, 0, 0, 646, 647, 648, 649, 0, 650, 651, 652, 653, 0, 0, 
      654, 655, 656, 0, 0, 0, 657, 658, 659, 0, 0, 660, 0, 661, 0, 662, 663, 
      664, 665, 666, 0, 0, 667, 0, 0, 0, 0, 668, 0, 0, 669, 670, 671, 672, 
      673, 674, 0, 0, 675, 676, 677, 0, 678, 679, 0, 0, 0, 680, 681, 682, 
      683, 684, 0, 685, 0, 686, 0, 0, 0, 687, 688, 0, 689, 0, 0, 690, 691, 
      692 ], vectors := < matrix 692x1000 : <MTX64 GF(3)>> )
gap> testSolutionMat(678,8);
gap> Reset(GlobalMersenneTwister, 11);;
gap> m := MakeSparseMatrix(MTX64_FiniteField(17), 50, 50,2);
< matrix 50x50 : <MTX64 GF(17)>>
gap> Display(TriangulizedMat(m));
  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  . 10  .  .
  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  . 12  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
gap> m := MTX64_NewMatrix(MTX64_FiniteField(9), 1000, 1000);;
gap> m2 := MTX64_RandomMat(MTX64_FiniteField(9), 1000, 800);;
gap> MTX64_DPaste(m2, 0, 1000, 200, m);
gap> MTX64_GAPEchelize(m);
rec( cleaner := < matrix 200x800 : <MTX64 GF(3^2)>>, 
  colSelect := < MTX64 bitstring 800/1000>, 
  multiplier := < matrix 800x800 : <MTX64 GF(3^2)>>, rank := 800, 
  remnant := < matrix 800x200 : <MTX64 GF(3^2)>>, 
  rowSelect := < MTX64 bitstring 800/1000> )
gap> Reset(GlobalMersenneTwister,25);;
gap> m1 := MakeEchTestMatrix(GF(25), 1000, 200);
< matrix 1000x1000 : <MTX64 GF(5^2)>>
gap> m2 := MakeEchTestMatrix(GF(25), 1000, 200);
< matrix 1000x1000 : <MTX64 GF(5^2)>>
gap> e := MTX64_GAPEchelize(m1, rec(cleanerNeeded := false, multiplierNeeded := false));
rec( colSelect := < MTX64 bitstring 100/1000>, rank := 100, 
  remnant := < matrix 100x900 : <MTX64 GF(5^2)>>, 
  rowSelect := < MTX64 bitstring 100/1000> )
gap> MTX64_CleanExtend(e, m2);
< MTX64 bitstring 100/1000>
gap> e;
rec( colSelect := < MTX64 bitstring 200/1000>, rank := 200, 
  remnant := < matrix 200x800 : <MTX64 GF(5^2)>>, 
  rowSelect := < MTX64 bitstring 200/2000> )
gap> m := MTX64_NewMatrix(MTX64_FiniteField(65537), 100, 100);;
gap> v := MTX64_RandomMat(MTX64_FiniteField(65537), 1, 100);;
gap> SolutionMat(m,v);
fail
gap> Reset(GlobalMersenneTwister, 22);;
gap> m := MakeEchTestMatrix(GF(7),1000,200);;
gap> b := BaseMat(m);
< matrix 100x1000 : <MTX64 GF(7)>>
gap> RankMat(b);
100
gap> Reset(GlobalMersenneTwister, 19);;
gap> m1 := MTX64_RandomMat(MTX64_FiniteField(181), 60, 100);;
gap> m2 := MTX64_RandomMat(MTX64_FiniteField(181), 59, 100);;
gap> sim := SumIntersectionMat(m1, m2);
[ < matrix 100x100 : <MTX64 GF(181)>>, < matrix 19x100 : <MTX64 GF(181)>> ]
gap> IsOne(sim[1]);
true
gap> Display(sim[2]);
   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
35 153  46  15  27 110 155  77   1  39 160 178  84 109 142 140 164 169 110  27\
  13 149 106 146  29   1   2 100 129 109  87   4  63 107 177  87 113 120  31  \
44 148  33 163 160 167 173 138 161 177   8  33  31  39 117  58 146  11   6 108\
  94   2 117  33 162 148  42  39  50  84  95 180 147  85  47 174 150  45   6 1\
21 106  73
   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
56  65  35 173  36  59  49 131 127  22 142 146 122  94 155 153  95 175  88  97\
 120  30  47  31 166  87 126 127 149  50 131 131 126 119 179   5  31  38   3  \
56 123 163  24  11  34  52  91  74  14  20  64 101 115  99 142 111  31  13  29\
  54  12  93 150 137  44 156  86 159  47 149  69 113  74 126 149   6 168  58 1\
36 139 147
   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  \
68  30  27 137  64 105 143  89  41 151 170 138  16  67  48  88  29  43  11 159\
 131 165  52 152 109  56 108 110  50  44  76  59 152  50  66  32 111 113  87 1\
11 134  26  17 170   8   5  49  78  40  73  64 101 162  33  94  57 137  49  93\
 179 161  72  12  83  46 109  62 132 178   6  89   7 121  39  56  68 118  37 1\
36 133 154
   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  \
27  31 138 146 118 112 123  73 142 162  14  28  97 124  82  65 105 160 176 110\
  13  47  22  11 102  70   4  94  10 144  56 132  28   2 140  91   2  73 165 1\
35 136  65  76 177  68  12  99  46  34  36  97 167 173  74 165  38  47  34  91\
  70  76  63 175 138  81 102  92  18  94 166  36 100  25  57 176   1 139  63 1\
00  53 161
   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
79 155   6  82 113  37  70 122  36  39  44 155 169 174   3  91 151  91 149 180\
  87  91 144  37 176  29  73 173  17  84  97 119  58 107  74  42  18 120 179  \
66 105  23  16   7 105  78 179 118 153 124 141  94  74 153 167  56  18 161 106\
  52 124  80 174 110 164  32 160  91 148 133 119 155 175 156 126  94  90 119  \
95 175 108
   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .  \
86  37 115   9  90  31 179 154 146  28  64  59   4  48 180 173 167  96 146 145\
 150  77  29 117   1  94 136  42 113  49   8 171 103 130  43 158 157 162 125 1\
06 142 140  54   6  53 120 108 121 117  47 112  21 163 138  23  51 140  19 124\
 104  79   4  99  63 107  36 136 117  29 147  93 150 156  64 112  54  33  24  \
32 158  43
   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   . 1\
38  26  95 116  79  42 151 176  17  62  22 102 167 102 104  43 144 179  34 158\
  54 109  26 176  67 101 130  74  53  33 146 139  64  10  80 154 145 147  42 1\
61  79 171 130 120 105   1  19  90 112 154   6 176   6   4 152 155  89 156 166\
 168 102   .  41  58 130 144  29 100  62  54  33 148 171  72  13 144  73  80  \
33 176 129
   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .  \
67  96 129 120  51 179 138  14  22 112  15 109 136 137   4  79 109  53  54  33\
 124 102  29  24  93 108   3 116  44 175  97 100  25 118  50  60 162 131  73  \
56  85  18 107  11  73 160 176  36 100 140  12 129   1  15  40 102 141  63 144\
 122 127 125  64  27  55 129  24  41 132  69 113 170 166 111  93  65 146  39  \
48  66 153
   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .  \
92 123 148 169  46 109  11 117  96  64  17  13 154 150 124 106  76  76  78  36\
  50  85 174 177  39  30  69 117  28  24 140  20 104 126  37  74 167  21 135  \
40 120  70 143 169  21  62  87  39  21  52  91 129   1  60  60 136  77 177 137\
  47  54  70  45   7  41  50 173  46 101  56  62 110  23 140  86  38 117  71  \
83  57 140
   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .  \
34   2  78  61  56 163 155 118  47  56 180 128  95 126  25 121  92 149 172 115\
 166  98  75 165  94 143 110  74 128 137  36  96 167  10  41 145  23  82 157  \
31   1  24  57  26  10 141  69  34  54   8  64  93  61 115  93  78  11  46  35\
  52 157 150  80 110 121 132 129 139 157  49 161 161  85 150   5  94 167 171  \
76 180 161
   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .  \
74  55  19  48  52  81  48 158 117 133 172 166  26  29 150  23 172 136  18  14\
   9  99  81 134 156  67 137 133  18 101 118  59 126 110 140 107  49  95  85  \
73 121  88 153 154  55 170  52 165  77 157 135 138  10 113 131  11 102 173  58\
 176  57 131  54 131  42  32  65  83  83 116  82 130 107 106  26  99  14 142  \
76 180 130
   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .  \
 4   3  69 160  38 120  25  20  93 163  97 114  34  32 168  77  89  72 128  24\
 156 157  51  31  34  97 128 152 171 107  63  21 116 174 132  42  73 156 113  \
82 115 116  56  30  35  98 111 178  61  77  58  53 158 113 141 115 104  40 154\
 105  25 104 154  57  13  19  29 115 115 113  23  45  23  32 126 122  37  22  \
99  21 178
   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   . 1\
07   6  62  93  91 168  86 159  60  58  92 110 161 142 148 174  34  44   . 177\
 153 131  99  22 133  58 119  65 138  83  25 135  40 132  91  51  76  94 137 1\
14   4  75 124  79 152 151  56  60 133  69 170 142 163 122   2 154 120  37 139\
  98  30  34 143   1  10 139 140  31 161  39  42  35  45  67  65  74 176 122 1\
22  75 143
   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   . 1\
32  12  40 149 175 176  92   1 155 129  96  27  44  90  18   9 176 153  89  78\
 129  93  63 166 154 126  75  56 159  70 137 155 156  80  37  21  66 123 180  \
17  67  65  84  19  41 165  19 143  26 101  18  27 143 175 166 106 146  21 145\
  18 154 178 161  97 172  77  87  98  94 178 104 179 154  30  74  19  96 124  \
66 104  63
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .  \
74  37 126  29 166  30 105  16  34   5  97   4 164 162 149 151  58  36  40   7\
 163 173  41  48  81   4  12  26   2 113   8 155  76  84  95 120   8  12  52 1\
70  84 125 102  44  93 101  85 116  86  35 143  70  21 123 110  65 120  50 178\
 127  45  70 102 117 180  53  51 170 173  59 104 111  28  27  33  21 139  99 1\
78 128  62
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .  \
63 111 160  37 144  46 134  44 137  93 100  82  29  63  72  10 113  73 109  64\
 159  67  50  27 146  57  27 158  41 145  48  48   5 113  91 106  54  83 151  \
51 135  66  46  15  79  88  60 150  83 146   4  60  85   .   9  53 131  75 152\
 132  50 106  75  21  64 179 125 104  37   1 162 154   8  12 120 108 161 134  \
79  30 153
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .  \
40 118  64  99 125  70 109 102 169 123 117 164  97 161  64  84 121  58  20 158\
  36  58 116  91  30  28  47 123  35 118 116  41  38 178  75 146 108  64  79  \
 2  55  32 106  34  21  68 135 168  23  57 108  52 119  76  52 151 147  96  33\
  51  61  61  49  51   3 106  10 138  71 159  28  85  16   7 107  56  78 106  \
71  56  54
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .  \
82  83  76  52  72  43  22 171 160  93 148  66  74  24  56  76  17 121  26  51\
  75  44 138 134 137 125  20 161   4  95 177   3 147 172  25 162 176   1  10  \
65  32  93  42 119 177  84 132  25  12 102  50   7  39 154 141  94  25  26 131\
  16 115 153  80  92 115  18  93 161  97 111   4  22 160  56 170  33 151  88 1\
73 164  24
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1  \
19 164  14  62  10  99  91 170   8 159   3  58  21  26 178 111 157  66 111  79\
  72   6 175  77 113  30 114   1 109  83 108 171 111 103   1  75 148  82  37  \
47 126 133 162  28 142 152   .  46  57   7  82  86 156 160 151 121  79  69 142\
 161 105  72  59  41  85  75  24  58 139 115  28   1   8  14 129  87  63  44  \
45  65  51
gap> m3 := MTX64_RandomMat(MTX64_FiniteField(179), 30, 100);;
gap> m4 := MTX64_RandomMat(MTX64_FiniteField(181), 30, 101);;
gap> SumIntersectionMat(m1,m3);
Error, Matrices incompatible
gap> SumIntersectionMat(m1,m4);
Error, Matrices incompatible
gap> STOP_TEST("echelize.tst");
