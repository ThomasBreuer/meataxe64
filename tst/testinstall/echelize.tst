gap> START_TEST("echelize.tst");
gap> Read(Filename(DirectoriesPackageLibrary("meataxe64","tst"),"testutils.g"));
gap> f := MTX64_FiniteField(3);
<MTX64 GF(3)>
gap> repeat m := MTX64_RandomMat(f,1000,1000); until RankMat(m) = 1000;
gap> m1 := ShallowCopy(m);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> m1[2] := m1[1];
< mutable compressed vector length 1000 over GF(3) >
gap> RankMat(m1);
999
gap> m1^-1;
fail
gap> m1 := ShallowCopy(m);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> m1[1000] := m1[1];
< mutable compressed vector length 1000 over GF(3) >
gap> RankMat(m1);
999
gap> m1^-1;               
fail
gap> for x in [[2,1000,2000],[3,2000,1000],[5,100,100],
>        [9,450,451],[13,100,110],[17, 250,200], [181, 500,501],
>        [257,300,310], [65537, 310, 300], [2^24, 20, 30],
>        [NextPrimeInt(2^32), 30,20], [11,1,1],[23,0,1],[16,1,0]] do
>         testEchelize(x[2],x[3],x[1], MTX64_Echelize_DefaultOptions);
>    od;
gap> Reset(GlobalMersenneTwister, 3);;
gap> m := MakeEchTestMatrix(GF(11^2), 1000,600);
< matrix 1000x1000 : <MTX64 GF(11^2)>>
gap> RankMat(m);
625
gap> e := MTX64_Echelize(m);
rec( cleaner := < matrix 375x625 : <MTX64 GF(11^2)>>, 
  colSelect := < MTX64 bitstring 625/1000>, det := <106 : <MTX64 GF(11^2)>>, 
  multiplier := < matrix 625x625 : <MTX64 GF(11^2)>>, rank := 625, 
  remnant := < matrix 625x375 : <MTX64 GF(11^2)>>, 
  rowSelect := < MTX64 bitstring 625/1000> )
gap> m2 := MakeEchTestMatrix(GF(11^2), 1000,600);
< matrix 1000x1000 : <MTX64 GF(11^2)>>
gap> MTX64_CleanExtend(e, m2);
< MTX64 bitstring 375/1000>
gap> e;
rec( cleaner := < matrix 1000x1000 : <MTX64 GF(11^2)>>, 
  colSelect := < MTX64 bitstring 1000/1000>, det := <106 : <MTX64 GF(11^2)>>, 
  multiplier := < matrix 1000x1000 : <MTX64 GF(11^2)>>, rank := 1000, 
  remnant := < matrix 1000x0 : <MTX64 GF(11^2)>>, 
  rowSelect := < MTX64 bitstring 1000/2000> )
gap> MTX64_GAPEchelize(MTX64_Matrix(Z(2)*[[0,0],[1,0]], 2), rec(failIfSingular := true));
fail
gap> Reset(GlobalMersenneTwister, 5);;
gap> f := MTX64_FiniteField(3);
<MTX64 GF(3)>
gap> m := MakeSparseMatrix(f,1000,1000,2);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> MTX64_GAPEchelize(m);
rec( cleaner := < matrix 308x692 : <MTX64 GF(3)>>, 
  colSelect := < MTX64 bitstring 692/1000>, 
  multiplier := < matrix 692x692 : <MTX64 GF(3)>>, rank := 692, 
  remnant := < matrix 692x308 : <MTX64 GF(3)>>, 
  rowSelect := < MTX64 bitstring 692/1000> )
gap> NullspaceMat(m);
< matrix 308x1000 : <MTX64 GF(3)>>
gap> n := NullspaceMat(m);
< matrix 308x1000 : <MTX64 GF(3)>>
gap> IsZero(n*m);
true
gap> SemiEchelonMatTransformation(m);
rec( coeffs := < matrix 692x1000 : <MTX64 GF(3)>>, 
  heads := [ 1, 0, 2, 3, 4, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 
      16, 17, 18, 0, 0, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 0, 0, 36, 37, 38, 0, 39, 40, 41, 42, 43, 0, 0, 44, 
      0, 0, 0, 0, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 0, 0, 55, 0, 0, 
      56, 0, 0, 57, 58, 0, 59, 60, 61, 62, 63, 64, 0, 0, 65, 66, 67, 68, 69, 
      0, 70, 71, 0, 72, 0, 73, 74, 75, 0, 76, 77, 78, 79, 0, 0, 80, 81, 82, 
      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100, 0, 101, 0, 102, 103, 104, 0, 105, 106, 107, 108, 109, 110, 111, 0, 
      112, 113, 114, 0, 115, 116, 0, 117, 0, 0, 118, 119, 120, 121, 122, 123, 
      0, 124, 125, 126, 127, 0, 128, 129, 0, 130, 0, 0, 131, 132, 133, 134, 
      135, 136, 137, 0, 138, 0, 139, 140, 0, 141, 142, 143, 144, 145, 0, 0, 
      146, 147, 148, 149, 150, 0, 151, 152, 0, 153, 154, 155, 156, 157, 0, 
      158, 159, 160, 161, 0, 162, 0, 163, 164, 165, 166, 0, 167, 168, 169, 
      170, 0, 0, 171, 0, 172, 173, 174, 0, 175, 176, 177, 178, 179, 180, 181, 
      0, 182, 0, 183, 0, 0, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 
      194, 0, 195, 196, 197, 198, 199, 0, 200, 201, 202, 203, 204, 205, 206, 
      207, 208, 209, 210, 0, 211, 212, 213, 214, 0, 215, 216, 217, 218, 0, 
      219, 0, 220, 221, 222, 223, 224, 0, 0, 225, 0, 226, 227, 228, 229, 230, 
      231, 232, 0, 233, 0, 234, 0, 235, 236, 237, 0, 0, 0, 0, 238, 0, 239, 
      240, 241, 0, 242, 243, 0, 244, 245, 0, 246, 247, 0, 248, 249, 250, 251, 
      0, 252, 0, 253, 254, 255, 256, 257, 258, 259, 0, 0, 260, 0, 0, 0, 261, 
      262, 263, 0, 264, 0, 265, 266, 267, 0, 268, 0, 0, 0, 269, 270, 271, 0, 
      0, 272, 273, 274, 0, 0, 275, 276, 277, 278, 0, 279, 0, 280, 0, 281, 
      282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 0, 293, 0, 294, 
      295, 0, 296, 297, 0, 298, 299, 300, 301, 0, 0, 0, 302, 303, 304, 305, 
      306, 307, 308, 0, 309, 310, 311, 0, 312, 313, 0, 314, 0, 315, 0, 316, 
      317, 318, 319, 320, 321, 322, 0, 323, 324, 0, 0, 325, 326, 0, 327, 328, 
      329, 330, 331, 0, 332, 0, 0, 333, 0, 0, 334, 335, 0, 336, 337, 338, 
      339, 340, 341, 342, 0, 343, 344, 345, 0, 346, 0, 0, 347, 348, 0, 349, 
      350, 0, 351, 352, 0, 353, 354, 355, 356, 357, 358, 359, 0, 0, 0, 360, 
      361, 362, 363, 364, 365, 0, 366, 367, 0, 368, 0, 0, 369, 370, 371, 0, 
      372, 373, 0, 0, 0, 374, 375, 0, 376, 0, 377, 0, 378, 379, 0, 380, 381, 
      382, 383, 0, 0, 0, 384, 385, 386, 387, 388, 389, 390, 0, 0, 391, 392, 
      393, 394, 0, 395, 396, 397, 0, 0, 398, 0, 399, 0, 400, 0, 0, 401, 402, 
      0, 403, 404, 405, 0, 406, 407, 408, 0, 0, 409, 410, 0, 411, 412, 413, 
      414, 415, 416, 0, 0, 0, 417, 418, 419, 0, 420, 421, 0, 422, 0, 423, 
      424, 0, 425, 0, 426, 427, 428, 0, 429, 430, 431, 432, 433, 0, 434, 0, 
      435, 436, 0, 0, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
      448, 449, 450, 451, 0, 452, 453, 454, 0, 0, 455, 0, 456, 457, 0, 0, 
      458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 0, 470, 
      471, 472, 0, 0, 473, 474, 475, 476, 0, 477, 0, 478, 479, 0, 480, 0, 
      481, 482, 0, 483, 484, 0, 0, 485, 486, 487, 0, 488, 0, 489, 490, 0, 
      491, 0, 0, 492, 493, 494, 495, 0, 0, 496, 497, 498, 0, 0, 0, 499, 500, 
      501, 0, 502, 0, 503, 504, 505, 0, 506, 507, 508, 509, 510, 511, 0, 512, 
      513, 514, 515, 516, 0, 517, 518, 519, 0, 0, 520, 521, 522, 0, 523, 524, 
      525, 0, 526, 527, 528, 529, 530, 531, 0, 0, 532, 533, 534, 535, 0, 0, 
      0, 536, 537, 0, 538, 539, 540, 0, 0, 541, 0, 542, 543, 544, 545, 546, 
      0, 547, 0, 0, 548, 549, 0, 550, 551, 0, 552, 553, 554, 555, 0, 556, 
      557, 558, 0, 0, 0, 559, 0, 0, 560, 561, 562, 563, 0, 564, 0, 0, 565, 
      566, 0, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 0, 0, 0, 
      0, 0, 0, 578, 0, 579, 580, 581, 582, 583, 0, 584, 585, 586, 587, 588, 
      589, 590, 591, 0, 592, 593, 0, 0, 594, 595, 596, 597, 0, 598, 0, 599, 
      600, 601, 602, 603, 604, 605, 606, 607, 0, 608, 0, 609, 610, 611, 612, 
      613, 614, 615, 0, 616, 0, 0, 617, 618, 619, 620, 621, 622, 0, 0, 623, 
      624, 625, 626, 627, 0, 0, 628, 0, 0, 629, 0, 0, 630, 631, 0, 632, 633, 
      634, 635, 0, 636, 0, 637, 0, 638, 639, 640, 0, 641, 0, 642, 643, 644, 
      0, 0, 645, 0, 0, 0, 0, 646, 647, 648, 649, 0, 650, 651, 652, 653, 0, 0, 
      654, 655, 656, 0, 0, 0, 657, 658, 659, 0, 0, 660, 0, 661, 0, 662, 663, 
      664, 665, 666, 0, 0, 667, 0, 0, 0, 0, 668, 0, 0, 669, 670, 671, 672, 
      673, 674, 0, 0, 675, 676, 677, 0, 678, 679, 0, 0, 0, 680, 681, 682, 
      683, 684, 0, 685, 0, 686, 0, 0, 0, 687, 688, 0, 689, 0, 0, 690, 691, 
      692 ], relations := < matrix 308x1000 : <MTX64 GF(3)>>, 
  vectors := < matrix 692x1000 : <MTX64 GF(3)>> )
gap> SemiEchelonMat(m);              
rec( heads := [ 1, 0, 2, 3, 4, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
      0, 16, 17, 18, 0, 0, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 0, 0, 36, 37, 38, 0, 39, 40, 41, 42, 43, 0, 0, 44, 
      0, 0, 0, 0, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 0, 0, 55, 0, 0, 
      56, 0, 0, 57, 58, 0, 59, 60, 61, 62, 63, 64, 0, 0, 65, 66, 67, 68, 69, 
      0, 70, 71, 0, 72, 0, 73, 74, 75, 0, 76, 77, 78, 79, 0, 0, 80, 81, 82, 
      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100, 0, 101, 0, 102, 103, 104, 0, 105, 106, 107, 108, 109, 110, 111, 0, 
      112, 113, 114, 0, 115, 116, 0, 117, 0, 0, 118, 119, 120, 121, 122, 123, 
      0, 124, 125, 126, 127, 0, 128, 129, 0, 130, 0, 0, 131, 132, 133, 134, 
      135, 136, 137, 0, 138, 0, 139, 140, 0, 141, 142, 143, 144, 145, 0, 0, 
      146, 147, 148, 149, 150, 0, 151, 152, 0, 153, 154, 155, 156, 157, 0, 
      158, 159, 160, 161, 0, 162, 0, 163, 164, 165, 166, 0, 167, 168, 169, 
      170, 0, 0, 171, 0, 172, 173, 174, 0, 175, 176, 177, 178, 179, 180, 181, 
      0, 182, 0, 183, 0, 0, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 
      194, 0, 195, 196, 197, 198, 199, 0, 200, 201, 202, 203, 204, 205, 206, 
      207, 208, 209, 210, 0, 211, 212, 213, 214, 0, 215, 216, 217, 218, 0, 
      219, 0, 220, 221, 222, 223, 224, 0, 0, 225, 0, 226, 227, 228, 229, 230, 
      231, 232, 0, 233, 0, 234, 0, 235, 236, 237, 0, 0, 0, 0, 238, 0, 239, 
      240, 241, 0, 242, 243, 0, 244, 245, 0, 246, 247, 0, 248, 249, 250, 251, 
      0, 252, 0, 253, 254, 255, 256, 257, 258, 259, 0, 0, 260, 0, 0, 0, 261, 
      262, 263, 0, 264, 0, 265, 266, 267, 0, 268, 0, 0, 0, 269, 270, 271, 0, 
      0, 272, 273, 274, 0, 0, 275, 276, 277, 278, 0, 279, 0, 280, 0, 281, 
      282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 0, 293, 0, 294, 
      295, 0, 296, 297, 0, 298, 299, 300, 301, 0, 0, 0, 302, 303, 304, 305, 
      306, 307, 308, 0, 309, 310, 311, 0, 312, 313, 0, 314, 0, 315, 0, 316, 
      317, 318, 319, 320, 321, 322, 0, 323, 324, 0, 0, 325, 326, 0, 327, 328, 
      329, 330, 331, 0, 332, 0, 0, 333, 0, 0, 334, 335, 0, 336, 337, 338, 
      339, 340, 341, 342, 0, 343, 344, 345, 0, 346, 0, 0, 347, 348, 0, 349, 
      350, 0, 351, 352, 0, 353, 354, 355, 356, 357, 358, 359, 0, 0, 0, 360, 
      361, 362, 363, 364, 365, 0, 366, 367, 0, 368, 0, 0, 369, 370, 371, 0, 
      372, 373, 0, 0, 0, 374, 375, 0, 376, 0, 377, 0, 378, 379, 0, 380, 381, 
      382, 383, 0, 0, 0, 384, 385, 386, 387, 388, 389, 390, 0, 0, 391, 392, 
      393, 394, 0, 395, 396, 397, 0, 0, 398, 0, 399, 0, 400, 0, 0, 401, 402, 
      0, 403, 404, 405, 0, 406, 407, 408, 0, 0, 409, 410, 0, 411, 412, 413, 
      414, 415, 416, 0, 0, 0, 417, 418, 419, 0, 420, 421, 0, 422, 0, 423, 
      424, 0, 425, 0, 426, 427, 428, 0, 429, 430, 431, 432, 433, 0, 434, 0, 
      435, 436, 0, 0, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
      448, 449, 450, 451, 0, 452, 453, 454, 0, 0, 455, 0, 456, 457, 0, 0, 
      458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 0, 470, 
      471, 472, 0, 0, 473, 474, 475, 476, 0, 477, 0, 478, 479, 0, 480, 0, 
      481, 482, 0, 483, 484, 0, 0, 485, 486, 487, 0, 488, 0, 489, 490, 0, 
      491, 0, 0, 492, 493, 494, 495, 0, 0, 496, 497, 498, 0, 0, 0, 499, 500, 
      501, 0, 502, 0, 503, 504, 505, 0, 506, 507, 508, 509, 510, 511, 0, 512, 
      513, 514, 515, 516, 0, 517, 518, 519, 0, 0, 520, 521, 522, 0, 523, 524, 
      525, 0, 526, 527, 528, 529, 530, 531, 0, 0, 532, 533, 534, 535, 0, 0, 
      0, 536, 537, 0, 538, 539, 540, 0, 0, 541, 0, 542, 543, 544, 545, 546, 
      0, 547, 0, 0, 548, 549, 0, 550, 551, 0, 552, 553, 554, 555, 0, 556, 
      557, 558, 0, 0, 0, 559, 0, 0, 560, 561, 562, 563, 0, 564, 0, 0, 565, 
      566, 0, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 0, 0, 0, 
      0, 0, 0, 578, 0, 579, 580, 581, 582, 583, 0, 584, 585, 586, 587, 588, 
      589, 590, 591, 0, 592, 593, 0, 0, 594, 595, 596, 597, 0, 598, 0, 599, 
      600, 601, 602, 603, 604, 605, 606, 607, 0, 608, 0, 609, 610, 611, 612, 
      613, 614, 615, 0, 616, 0, 0, 617, 618, 619, 620, 621, 622, 0, 0, 623, 
      624, 625, 626, 627, 0, 0, 628, 0, 0, 629, 0, 0, 630, 631, 0, 632, 633, 
      634, 635, 0, 636, 0, 637, 0, 638, 639, 640, 0, 641, 0, 642, 643, 644, 
      0, 0, 645, 0, 0, 0, 0, 646, 647, 648, 649, 0, 650, 651, 652, 653, 0, 0, 
      654, 655, 656, 0, 0, 0, 657, 658, 659, 0, 0, 660, 0, 661, 0, 662, 663, 
      664, 665, 666, 0, 0, 667, 0, 0, 0, 0, 668, 0, 0, 669, 670, 671, 672, 
      673, 674, 0, 0, 675, 676, 677, 0, 678, 679, 0, 0, 0, 680, 681, 682, 
      683, 684, 0, 685, 0, 686, 0, 0, 0, 687, 688, 0, 689, 0, 0, 690, 691, 
      692 ], vectors := < matrix 692x1000 : <MTX64 GF(3)>> )
gap> testSolutionMat(678,8);
gap> Reset(GlobalMersenneTwister, 11);;
gap> m := MakeSparseMatrix(MTX64_FiniteField(17), 50, 50,2);
< matrix 50x50 : <MTX64 GF(17)>>
gap> Display(TriangulizedMat(m));
  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  . 10  .  .
  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  . 12  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
gap> m := MTX64_NewMatrix(MTX64_FiniteField(9), 1000, 1000);;
gap> m2 := MTX64_RandomMat(MTX64_FiniteField(9), 1000, 800);;
gap> MTX64_DPaste(m2, 0, 1000, 200, m);
gap> MTX64_GAPEchelize(m);
rec( cleaner := < matrix 200x800 : <MTX64 GF(3^2)>>, 
  colSelect := < MTX64 bitstring 800/1000>, 
  multiplier := < matrix 800x800 : <MTX64 GF(3^2)>>, rank := 800, 
  remnant := < matrix 800x200 : <MTX64 GF(3^2)>>, 
  rowSelect := < MTX64 bitstring 800/1000> )
gap> Reset(GlobalMersenneTwister,25);;
gap> m1 := MakeEchTestMatrix(GF(25), 1000, 200);
< matrix 1000x1000 : <MTX64 GF(5^2)>>
gap> m2 := MakeEchTestMatrix(GF(25), 1000, 200);
< matrix 1000x1000 : <MTX64 GF(5^2)>>
gap> e := MTX64_GAPEchelize(m1, rec(cleanerNeeded := false, multiplierNeeded := false));
rec( colSelect := < MTX64 bitstring 100/1000>, rank := 100, 
  remnant := < matrix 100x900 : <MTX64 GF(5^2)>>, 
  rowSelect := < MTX64 bitstring 100/1000> )
gap> MTX64_CleanExtend(e, m2);
< MTX64 bitstring 100/1000>
gap> e;
rec( colSelect := < MTX64 bitstring 200/1000>, rank := 200, 
  remnant := < matrix 200x800 : <MTX64 GF(5^2)>>, 
  rowSelect := < MTX64 bitstring 200/2000> )
gap> m := MTX64_NewMatrix(MTX64_FiniteField(65537), 100, 100);;
gap> v := MTX64_RandomMat(MTX64_FiniteField(65537), 1, 100);;
gap> SolutionMat(m,v);
fail
gap> Reset(GlobalMersenneTwister, 22);;
gap> m := MakeEchTestMatrix(GF(7),1000,200);;
gap> b := BaseMat(m);
< matrix 100x1000 : <MTX64 GF(7)>>
gap> RankMat(b);
100
gap> Reset(GlobalMersenneTwister, 19);;
gap> m1 := MTX64_RandomMat(MTX64_FiniteField(181), 60, 100);;
gap> m2 := MTX64_RandomMat(MTX64_FiniteField(181), 59, 100);;
gap> sim := SumIntersectionMat(m1, m2);
[ < matrix 100x100 : <MTX64 GF(181)>>, < matrix 19x100 : <MTX64 GF(181)>> ]
gap> IsOne(sim[1]);
true
gap> Display(sim[2]);
   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
75  10 138 104 161  52 108 174 148 118  80  52  45 119 176   5  97 151 160 113\
  76   3 117  56 175 168  43  65 132 103  27  84 128  94  97 101  29  97  80 1\
62  22  49  25  74  80 161  57  89  63 178  66 112 109 142 157 162 148 128 134\
  92  14  80 123 144 141 176  25 108 142 150 165 179  33   4  67 141 176 140 1\
31   9 140
   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  \
49  42  78  54  46  64  22  73  35 177 104 140 173  93   . 169 159 125  84  26\
  57 149  77  82 107  21  26  55  56 152 106  66 110  28  27 104 113 117  67  \
39  11  40  72  45  95  89  53 129  70 100  22  55  82  74 109  78  97  18 150\
  51  93 139  92 164 180  98 156  38 125 176  99 177 157 165  82  14  81  39  \
56  55  52
   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  \
 .  74 176  42 178   3 138  79  19 152  16 168 130  74 136  34 108 164  63  16\
  28  75 152 130  96 134  67 168  88 180  34 113  33  97  59  71 173 152  35  \
64  95 166   6  12  72  82 106 159  77 111  41  91 163  84  33  71  50 118  42\
 180  93  57 100  10  73 170  61  84 156 158  25  68  80 101  77  85  97  50  \
 5  10  86
   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
25 111 163  22  96 113 124   .  51  95 105 147 102 170  21  62  22  45  54  79\
  21 180  56 154  33 150   2 121  88   4  57 161 103 134 144   4  12 141 173  \
21 146  66 126  97  76  10 130  48  85  90  11  76 170 111 115  14  84 150  43\
  71  31 165 142  49 116  51 144  32  67  43  56 106 175  44  65  90  18 153  \
 5 150 141
   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
50  95  79 125   2 110  31 155 102 110 147 147  37 107 168 172 154  37  44 160\
  13  92 173  22 137  20  43  55 178 124   5  44  93  44  96  88  62  54  41 1\
33  92 178  79  50 160 120  86  77 171  47  99 115  27 115 133  51 129  87  53\
  93 144  21  28 123  57 160  11 138  50 126  83 167 114 136  11 103   8  14 1\
12  75 105
   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
18  42  82 153   .  94  43 124 174  42  42  64   1  55 145 114  77 116 166  78\
  86 153 146 108  68 141  70  67 165 142  45  80  62  21 146 139  30  47  41 1\
17  87 153 176 153 105 178  86 101 121  77  82 174 103  11  79  58  47  43  88\
 125 158 153  93  99  82 111  78  43 108 166  25 165  63 139  34  79  36   5 1\
53  36 141
   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   . 1\
25 105  34 171  15 140  31   3  21 144 124  28 176 130  49 141 134  11 103 161\
 105   3 153 150 107  37  20  28  34 111  50 174  54  30  88  79  26 169 157 1\
60  57  78 143  56 121   4 167  62   2  22 161  22 145 129 116 102 157 101  60\
  99  54 175  22  43  15 137  86 135  80 127  89 146  63 161 164 154  38 143  \
31  59 139
   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   . 1\
49  54 111  54  17 141 120  47 176 131 158 113 114 148  82  80  80  84 105  49\
  50  59  58  79  46 177 112  40   6  23 101  83  42  20  80 161 160  20 180  \
81   8 159  52 151  68   4 169   3 126  74  96 131  29 117 156  99  31  15  39\
 130  37  74  77 156  90  79 120 170 169  89 129 123  84 174   2 179 108  32  \
67  27  76
   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   . 1\
50  98   5  88  68 118  28  40  30  48 126   3 120  32  45  14 106  39  80 155\
  86  52  63 132 167 132   .   5 127 152  54 167 118  28  46 168 165 106 126  \
75 106 115 158   2  61  58  45 103 162  39 132  96  51 117  13  58  44  77  46\
  52 129 144 138 139  48  20  35 172  41 134 158  32 168  65 152 109   . 107 1\
49  49  25
   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .  \
28  51 121 120 176  82  62  36 116  89 148 161 104 173  47 117  49  41  99 118\
 154  85 123  60 145   8  61  64 106 140  99 167  77 172   5  77 167 147 127 1\
52 104  38  84   8 152 180  16 138  42  82  98 169 140 162  77 117   5 136  13\
 143  48  35  73  30  63 103  57  37  47  53   2 173  90 145 173  95 106 154 1\
49 137  45
   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .  \
35  68 134 161  83  90  50  59  47 170  67 165 156 165 149  98 135  22  58   .\
 141   5  69 142  28 138  62 158  79  51   9  58 178 180 107 142   4  79  13 1\
06  58 157  49 166 124   4   4  60 154 111  70  59  64 122 133 159  86  93 106\
 143 165  62  51  46 108 161   4 103  56 127 131  95 121 164  30 142 109   1  \
52  36 126
   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .  \
 7  29 105  82  47  61  60 132 107 179 101  90  46  62  87  38 126 106  53 126\
  50  40  96 179  12 167  14 138  88  37 101   1 115  10 177  68  60 100 131  \
13 156 172   9  43 152  55 107   1 169  62  35  36  83 149  95  62 149  42 132\
  76  72 137  17 145  72  19  46  26  73 168 131 167  77 176 160 160 162  20 1\
26 141  26
   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .  \
93 167   .  60  79 157  60  20 132 101  50  28  79 147 131 139  27  88  17 135\
  84  20  84  89  24 175   7  86 109  95  79  39  45  78  27 156 136 160  75 1\
55 171 131  81  34  15 131 130 116 155  15 158 100 150 171  89 139  69 132  79\
  40  91  22   1 162  80  67 139  66  17  22  38  66  69 160  63  67  29   1 1\
42  61  41
   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .  \
60  36 138  34  58 137 133 112  96  20 132 155  76 167 111  33 121  55 178 123\
  34 127  15  32  53 166  72  86 156 145  95 142 142 178 140  21  46 160  82  \
70 128  69 108  71 149 154 166 166 120  64  16  91 117  64  49 108  93   .  11\
  68  41  91  82 178  81  23  18  88  67 146 106  83 173 176  38  79 177 104  \
81  60 156
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .  \
24  12 155 150 127 132 180  42 166  72  65  13 139 171  90  40  28  27 129 171\
  85  53  49  43  36   . 148 179   2  64 162 119  50  77  79  63   2  40  31  \
 1  90  20 126  35  74 113  61 108  48  35 168  57 105 134  69  45  94  29  19\
  69  33  22  96  83  81  63 167   2 148  13  51 152  51 175 168  68   . 152  \
39  97   1
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .  \
13 135  17  33 174  47 177 124 113  34  54  66  36  22  21 121 173   9 159 107\
  38  36  98  75   4  25 101   4  90  49 135 120  28 174  13 145  31  94 149 1\
20 148  83  43  90 168  88 123 120 159 149 170  96   2 166 167  95  44  86  55\
  33  23  46  71  19  24  73 178  48  20 107 140 126 156  29  88 142 110 116  \
58  66  82
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   . 1\
18  74 169 168 166  88  53 139 170 147 100  12   8   6  98 174 134   9  75 107\
  77  15 124 152   8  51 177  19  83 151 107 114 141  44 153 157  75  11 179 1\
21  50 153 112 104  26  35  34  47 100  36 103  14  96   2 104 130  34  10 158\
  74  21  11  99  16 122  83  48  75   9  41  27 138 154  47  80 108  38  83 1\
52 104   8
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   . 1\
44  87  40 129 153 177  86 153  91  66 130 140  12  86 158  41 146 154  26  14\
 143  64 171  37 102 116 101 101 122   3  22  24  17 129 128  33 145 107 105  \
17 144  70 174 126 131  52 139 112 174  67  72  40 109 158  92  85 153  32 103\
 114 107   7  61 135 167 128  56  54 145  90  79  60  46  52  91 167 155   7 1\
77  30 160
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1 1\
47  46  14 107 131  81   . 126  28  42  29  96  86 111  95  62  30  41 111 102\
 132 113  94  75 138 150  30 154 147  29 122 168  62 106 123 171  31  45  33  \
54  44 101 107  98 104 157 135  44 100 102 113 123  13  58  75  40 135 159 101\
  36  65   1 114  54 105 158 104  62  87 111  55  26 151  50  53 127  97 163  \
29   1  54
gap> m3 := MTX64_RandomMat(MTX64_FiniteField(179), 30, 100);;
gap> m4 := MTX64_RandomMat(MTX64_FiniteField(181), 30, 101);;
gap> SumIntersectionMat(m1,m3);
Error, Matrices incompatible
gap> SumIntersectionMat(m1,m4);
Error, Matrices incompatible
gap> STOP_TEST("echelize.tst");
