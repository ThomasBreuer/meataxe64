gap> START_TEST("echelize.tst");
gap> Read(Filename(DirectoriesPackageLibrary("meataxe64","tst"),"testutils.g"));
gap> f := MTX64_FiniteField(3);
<MTX64 GF(3)>
gap> repeat m := MTX64_RandomMat(f,1000,1000); until RankMat(m) = 1000;
gap> m1 := ShallowCopy(m);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> m1[2] := m1[1];
< mutable compressed vector length 1000 over GF(3) >
gap> RankMat(m1);
999
gap> m1^-1;
fail
gap> m1 := ShallowCopy(m);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> m1[1000] := m1[1];
< mutable compressed vector length 1000 over GF(3) >
gap> RankMat(m1);
999
gap> m1^-1;               
fail
gap> for x in [[2,1000,2000],[3,2000,1000],[5,100,100],
>        [9,450,451],[13,100,110],[17, 250,200], [181, 500,501],
>        [257,300,310], [65537, 310, 300], [2^24, 20, 30],
>        [NextPrimeInt(2^32), 30,20], [11,1,1],[23,0,1],[16,1,0]] do
>         testEchelize(x[2],x[3],x[1], MTX64_Echelize_DefaultOptions);
>    od;
gap> Reset(GlobalMersenneTwister, 3);;
gap> m := MakeEchTestMatrix(GF(11^2), 1000,600);
< matrix 1000x1000 : <MTX64 GF(11^2)>>
gap> RankMat(m);
625
gap> e := MTX64_Echelize(m);
rec( cleaner := < matrix 375x625 : <MTX64 GF(11^2)>>, 
  colSelect := < MTX64 bitstring 625/1000>, det := <106 : <MTX64 GF(11^2)>>, 
  multiplier := < matrix 625x625 : <MTX64 GF(11^2)>>, rank := 625, 
  remnant := < matrix 625x375 : <MTX64 GF(11^2)>>, 
  rowSelect := < MTX64 bitstring 625/1000> )
gap> m2 := MakeEchTestMatrix(GF(11^2), 1000,600);
< matrix 1000x1000 : <MTX64 GF(11^2)>>
gap> MTX64_CleanExtend(e, m2);
< MTX64 bitstring 375/1000>
gap> e;
rec( cleaner := < matrix 1000x1000 : <MTX64 GF(11^2)>>, 
  colSelect := < MTX64 bitstring 1000/1000>, det := <106 : <MTX64 GF(11^2)>>, 
  multiplier := < matrix 1000x1000 : <MTX64 GF(11^2)>>, rank := 1000, 
  remnant := < matrix 1000x0 : <MTX64 GF(11^2)>>, 
  rowSelect := < MTX64 bitstring 1000/2000> )
gap> MTX64_GAPEchelize(MTX64_Matrix(Z(2)*[[0,0],[1,0]], 2), rec(failIfSingular := true));
fail
gap> Reset(GlobalMersenneTwister, 5);;
gap> f := MTX64_FiniteField(3);
<MTX64 GF(3)>
gap> m := MakeSparseMatrix(f,1000,1000,2);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> MTX64_GAPEchelize(m);
rec( cleaner := < matrix 308x692 : <MTX64 GF(3)>>, 
  colSelect := < MTX64 bitstring 692/1000>, 
  multiplier := < matrix 692x692 : <MTX64 GF(3)>>, rank := 692, 
  remnant := < matrix 692x308 : <MTX64 GF(3)>>, 
  rowSelect := < MTX64 bitstring 692/1000> )
gap> NullspaceMat(m);
< matrix 308x1000 : <MTX64 GF(3)>>
gap> n := NullspaceMat(m);
< matrix 308x1000 : <MTX64 GF(3)>>
gap> IsZero(n*m);
true
gap> SemiEchelonMatTransformation(m);
rec( coeffs := < matrix 692x1000 : <MTX64 GF(3)>>, 
  heads := [ 1, 0, 2, 3, 4, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 
      16, 17, 18, 0, 0, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 0, 0, 36, 37, 38, 0, 39, 40, 41, 42, 43, 0, 0, 44, 
      0, 0, 0, 0, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 0, 0, 55, 0, 0, 
      56, 0, 0, 57, 58, 0, 59, 60, 61, 62, 63, 64, 0, 0, 65, 66, 67, 68, 69, 
      0, 70, 71, 0, 72, 0, 73, 74, 75, 0, 76, 77, 78, 79, 0, 0, 80, 81, 82, 
      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100, 0, 101, 0, 102, 103, 104, 0, 105, 106, 107, 108, 109, 110, 111, 0, 
      112, 113, 114, 0, 115, 116, 0, 117, 0, 0, 118, 119, 120, 121, 122, 123, 
      0, 124, 125, 126, 127, 0, 128, 129, 0, 130, 0, 0, 131, 132, 133, 134, 
      135, 136, 137, 0, 138, 0, 139, 140, 0, 141, 142, 143, 144, 145, 0, 0, 
      146, 147, 148, 149, 150, 0, 151, 152, 0, 153, 154, 155, 156, 157, 0, 
      158, 159, 160, 161, 0, 162, 0, 163, 164, 165, 166, 0, 167, 168, 169, 
      170, 0, 0, 171, 0, 172, 173, 174, 0, 175, 176, 177, 178, 179, 180, 181, 
      0, 182, 0, 183, 0, 0, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 
      194, 0, 195, 196, 197, 198, 199, 0, 200, 201, 202, 203, 204, 205, 206, 
      207, 208, 209, 210, 0, 211, 212, 213, 214, 0, 215, 216, 217, 218, 0, 
      219, 0, 220, 221, 222, 223, 224, 0, 0, 225, 0, 226, 227, 228, 229, 230, 
      231, 232, 0, 233, 0, 234, 0, 235, 236, 237, 0, 0, 0, 0, 238, 0, 239, 
      240, 241, 0, 242, 243, 0, 244, 245, 0, 246, 247, 0, 248, 249, 250, 251, 
      0, 252, 0, 253, 254, 255, 256, 257, 258, 259, 0, 0, 260, 0, 0, 0, 261, 
      262, 263, 0, 264, 0, 265, 266, 267, 0, 268, 0, 0, 0, 269, 270, 271, 0, 
      0, 272, 273, 274, 0, 0, 275, 276, 277, 278, 0, 279, 0, 280, 0, 281, 
      282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 0, 293, 0, 294, 
      295, 0, 296, 297, 0, 298, 299, 300, 301, 0, 0, 0, 302, 303, 304, 305, 
      306, 307, 308, 0, 309, 310, 311, 0, 312, 313, 0, 314, 0, 315, 0, 316, 
      317, 318, 319, 320, 321, 322, 0, 323, 324, 0, 0, 325, 326, 0, 327, 328, 
      329, 330, 331, 0, 332, 0, 0, 333, 0, 0, 334, 335, 0, 336, 337, 338, 
      339, 340, 341, 342, 0, 343, 344, 345, 0, 346, 0, 0, 347, 348, 0, 349, 
      350, 0, 351, 352, 0, 353, 354, 355, 356, 357, 358, 359, 0, 0, 0, 360, 
      361, 362, 363, 364, 365, 0, 366, 367, 0, 368, 0, 0, 369, 370, 371, 0, 
      372, 373, 0, 0, 0, 374, 375, 0, 376, 0, 377, 0, 378, 379, 0, 380, 381, 
      382, 383, 0, 0, 0, 384, 385, 386, 387, 388, 389, 390, 0, 0, 391, 392, 
      393, 394, 0, 395, 396, 397, 0, 0, 398, 0, 399, 0, 400, 0, 0, 401, 402, 
      0, 403, 404, 405, 0, 406, 407, 408, 0, 0, 409, 410, 0, 411, 412, 413, 
      414, 415, 416, 0, 0, 0, 417, 418, 419, 0, 420, 421, 0, 422, 0, 423, 
      424, 0, 425, 0, 426, 427, 428, 0, 429, 430, 431, 432, 433, 0, 434, 0, 
      435, 436, 0, 0, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
      448, 449, 450, 451, 0, 452, 453, 454, 0, 0, 455, 0, 456, 457, 0, 0, 
      458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 0, 470, 
      471, 472, 0, 0, 473, 474, 475, 476, 0, 477, 0, 478, 479, 0, 480, 0, 
      481, 482, 0, 483, 484, 0, 0, 485, 486, 487, 0, 488, 0, 489, 490, 0, 
      491, 0, 0, 492, 493, 494, 495, 0, 0, 496, 497, 498, 0, 0, 0, 499, 500, 
      501, 0, 502, 0, 503, 504, 505, 0, 506, 507, 508, 509, 510, 511, 0, 512, 
      513, 514, 515, 516, 0, 517, 518, 519, 0, 0, 520, 521, 522, 0, 523, 524, 
      525, 0, 526, 527, 528, 529, 530, 531, 0, 0, 532, 533, 534, 535, 0, 0, 
      0, 536, 537, 0, 538, 539, 540, 0, 0, 541, 0, 542, 543, 544, 545, 546, 
      0, 547, 0, 0, 548, 549, 0, 550, 551, 0, 552, 553, 554, 555, 0, 556, 
      557, 558, 0, 0, 0, 559, 0, 0, 560, 561, 562, 563, 0, 564, 0, 0, 565, 
      566, 0, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 0, 0, 0, 
      0, 0, 0, 578, 0, 579, 580, 581, 582, 583, 0, 584, 585, 586, 587, 588, 
      589, 590, 591, 0, 592, 593, 0, 0, 594, 595, 596, 597, 0, 598, 0, 599, 
      600, 601, 602, 603, 604, 605, 606, 607, 0, 608, 0, 609, 610, 611, 612, 
      613, 614, 615, 0, 616, 0, 0, 617, 618, 619, 620, 621, 622, 0, 0, 623, 
      624, 625, 626, 627, 0, 0, 628, 0, 0, 629, 0, 0, 630, 631, 0, 632, 633, 
      634, 635, 0, 636, 0, 637, 0, 638, 639, 640, 0, 641, 0, 642, 643, 644, 
      0, 0, 645, 0, 0, 0, 0, 646, 647, 648, 649, 0, 650, 651, 652, 653, 0, 0, 
      654, 655, 656, 0, 0, 0, 657, 658, 659, 0, 0, 660, 0, 661, 0, 662, 663, 
      664, 665, 666, 0, 0, 667, 0, 0, 0, 0, 668, 0, 0, 669, 670, 671, 672, 
      673, 674, 0, 0, 675, 676, 677, 0, 678, 679, 0, 0, 0, 680, 681, 682, 
      683, 684, 0, 685, 0, 686, 0, 0, 0, 687, 688, 0, 689, 0, 0, 690, 691, 
      692 ], relations := < matrix 308x1000 : <MTX64 GF(3)>>, 
  vectors := < matrix 692x1000 : <MTX64 GF(3)>> )
gap> SemiEchelonMat(m);              
rec( heads := [ 1, 0, 2, 3, 4, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
      0, 16, 17, 18, 0, 0, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 0, 0, 36, 37, 38, 0, 39, 40, 41, 42, 43, 0, 0, 44, 
      0, 0, 0, 0, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 0, 0, 55, 0, 0, 
      56, 0, 0, 57, 58, 0, 59, 60, 61, 62, 63, 64, 0, 0, 65, 66, 67, 68, 69, 
      0, 70, 71, 0, 72, 0, 73, 74, 75, 0, 76, 77, 78, 79, 0, 0, 80, 81, 82, 
      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100, 0, 101, 0, 102, 103, 104, 0, 105, 106, 107, 108, 109, 110, 111, 0, 
      112, 113, 114, 0, 115, 116, 0, 117, 0, 0, 118, 119, 120, 121, 122, 123, 
      0, 124, 125, 126, 127, 0, 128, 129, 0, 130, 0, 0, 131, 132, 133, 134, 
      135, 136, 137, 0, 138, 0, 139, 140, 0, 141, 142, 143, 144, 145, 0, 0, 
      146, 147, 148, 149, 150, 0, 151, 152, 0, 153, 154, 155, 156, 157, 0, 
      158, 159, 160, 161, 0, 162, 0, 163, 164, 165, 166, 0, 167, 168, 169, 
      170, 0, 0, 171, 0, 172, 173, 174, 0, 175, 176, 177, 178, 179, 180, 181, 
      0, 182, 0, 183, 0, 0, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 
      194, 0, 195, 196, 197, 198, 199, 0, 200, 201, 202, 203, 204, 205, 206, 
      207, 208, 209, 210, 0, 211, 212, 213, 214, 0, 215, 216, 217, 218, 0, 
      219, 0, 220, 221, 222, 223, 224, 0, 0, 225, 0, 226, 227, 228, 229, 230, 
      231, 232, 0, 233, 0, 234, 0, 235, 236, 237, 0, 0, 0, 0, 238, 0, 239, 
      240, 241, 0, 242, 243, 0, 244, 245, 0, 246, 247, 0, 248, 249, 250, 251, 
      0, 252, 0, 253, 254, 255, 256, 257, 258, 259, 0, 0, 260, 0, 0, 0, 261, 
      262, 263, 0, 264, 0, 265, 266, 267, 0, 268, 0, 0, 0, 269, 270, 271, 0, 
      0, 272, 273, 274, 0, 0, 275, 276, 277, 278, 0, 279, 0, 280, 0, 281, 
      282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 0, 293, 0, 294, 
      295, 0, 296, 297, 0, 298, 299, 300, 301, 0, 0, 0, 302, 303, 304, 305, 
      306, 307, 308, 0, 309, 310, 311, 0, 312, 313, 0, 314, 0, 315, 0, 316, 
      317, 318, 319, 320, 321, 322, 0, 323, 324, 0, 0, 325, 326, 0, 327, 328, 
      329, 330, 331, 0, 332, 0, 0, 333, 0, 0, 334, 335, 0, 336, 337, 338, 
      339, 340, 341, 342, 0, 343, 344, 345, 0, 346, 0, 0, 347, 348, 0, 349, 
      350, 0, 351, 352, 0, 353, 354, 355, 356, 357, 358, 359, 0, 0, 0, 360, 
      361, 362, 363, 364, 365, 0, 366, 367, 0, 368, 0, 0, 369, 370, 371, 0, 
      372, 373, 0, 0, 0, 374, 375, 0, 376, 0, 377, 0, 378, 379, 0, 380, 381, 
      382, 383, 0, 0, 0, 384, 385, 386, 387, 388, 389, 390, 0, 0, 391, 392, 
      393, 394, 0, 395, 396, 397, 0, 0, 398, 0, 399, 0, 400, 0, 0, 401, 402, 
      0, 403, 404, 405, 0, 406, 407, 408, 0, 0, 409, 410, 0, 411, 412, 413, 
      414, 415, 416, 0, 0, 0, 417, 418, 419, 0, 420, 421, 0, 422, 0, 423, 
      424, 0, 425, 0, 426, 427, 428, 0, 429, 430, 431, 432, 433, 0, 434, 0, 
      435, 436, 0, 0, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
      448, 449, 450, 451, 0, 452, 453, 454, 0, 0, 455, 0, 456, 457, 0, 0, 
      458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 0, 470, 
      471, 472, 0, 0, 473, 474, 475, 476, 0, 477, 0, 478, 479, 0, 480, 0, 
      481, 482, 0, 483, 484, 0, 0, 485, 486, 487, 0, 488, 0, 489, 490, 0, 
      491, 0, 0, 492, 493, 494, 495, 0, 0, 496, 497, 498, 0, 0, 0, 499, 500, 
      501, 0, 502, 0, 503, 504, 505, 0, 506, 507, 508, 509, 510, 511, 0, 512, 
      513, 514, 515, 516, 0, 517, 518, 519, 0, 0, 520, 521, 522, 0, 523, 524, 
      525, 0, 526, 527, 528, 529, 530, 531, 0, 0, 532, 533, 534, 535, 0, 0, 
      0, 536, 537, 0, 538, 539, 540, 0, 0, 541, 0, 542, 543, 544, 545, 546, 
      0, 547, 0, 0, 548, 549, 0, 550, 551, 0, 552, 553, 554, 555, 0, 556, 
      557, 558, 0, 0, 0, 559, 0, 0, 560, 561, 562, 563, 0, 564, 0, 0, 565, 
      566, 0, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 0, 0, 0, 
      0, 0, 0, 578, 0, 579, 580, 581, 582, 583, 0, 584, 585, 586, 587, 588, 
      589, 590, 591, 0, 592, 593, 0, 0, 594, 595, 596, 597, 0, 598, 0, 599, 
      600, 601, 602, 603, 604, 605, 606, 607, 0, 608, 0, 609, 610, 611, 612, 
      613, 614, 615, 0, 616, 0, 0, 617, 618, 619, 620, 621, 622, 0, 0, 623, 
      624, 625, 626, 627, 0, 0, 628, 0, 0, 629, 0, 0, 630, 631, 0, 632, 633, 
      634, 635, 0, 636, 0, 637, 0, 638, 639, 640, 0, 641, 0, 642, 643, 644, 
      0, 0, 645, 0, 0, 0, 0, 646, 647, 648, 649, 0, 650, 651, 652, 653, 0, 0, 
      654, 655, 656, 0, 0, 0, 657, 658, 659, 0, 0, 660, 0, 661, 0, 662, 663, 
      664, 665, 666, 0, 0, 667, 0, 0, 0, 0, 668, 0, 0, 669, 670, 671, 672, 
      673, 674, 0, 0, 675, 676, 677, 0, 678, 679, 0, 0, 0, 680, 681, 682, 
      683, 684, 0, 685, 0, 686, 0, 0, 0, 687, 688, 0, 689, 0, 0, 690, 691, 
      692 ], vectors := < matrix 692x1000 : <MTX64 GF(3)>> )
gap> testSolutionMat(678,8);
gap> Reset(GlobalMersenneTwister, 11);;
gap> m := MakeSparseMatrix(MTX64_FiniteField(17), 50, 50,2);
< matrix 50x50 : <MTX64 GF(17)>>
gap> Display(TriangulizedMat(m));
  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  . 10  .  .
  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  . 12  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
gap> m := MTX64_NewMatrix(MTX64_FiniteField(9), 1000, 1000);;
gap> m2 := MTX64_RandomMat(MTX64_FiniteField(9), 1000, 800);;
gap> MTX64_DPaste(m2, 0, 1000, 200, m);
gap> MTX64_GAPEchelize(m);
rec( cleaner := < matrix 200x800 : <MTX64 GF(3^2)>>, 
  colSelect := < MTX64 bitstring 800/1000>, 
  multiplier := < matrix 800x800 : <MTX64 GF(3^2)>>, rank := 800, 
  remnant := < matrix 800x200 : <MTX64 GF(3^2)>>, 
  rowSelect := < MTX64 bitstring 800/1000> )
gap> Reset(GlobalMersenneTwister,25);;
gap> m1 := MakeEchTestMatrix(GF(25), 1000, 200);
< matrix 1000x1000 : <MTX64 GF(5^2)>>
gap> m2 := MakeEchTestMatrix(GF(25), 1000, 200);
< matrix 1000x1000 : <MTX64 GF(5^2)>>
gap> e := MTX64_GAPEchelize(m1, rec(cleanerNeeded := false, multiplierNeeded := false));
rec( colSelect := < MTX64 bitstring 100/1000>, rank := 100, 
  remnant := < matrix 100x900 : <MTX64 GF(5^2)>>, 
  rowSelect := < MTX64 bitstring 100/1000> )
gap> MTX64_CleanExtend(e, m2);
< MTX64 bitstring 100/1000>
gap> e;
rec( colSelect := < MTX64 bitstring 200/1000>, rank := 200, 
  remnant := < matrix 200x800 : <MTX64 GF(5^2)>>, 
  rowSelect := < MTX64 bitstring 200/2000> )
gap> m := MTX64_NewMatrix(MTX64_FiniteField(65537), 100, 100);;
gap> v := MTX64_RandomMat(MTX64_FiniteField(65537), 1, 100);;
gap> SolutionMat(m,v);
fail
gap> Reset(GlobalMersenneTwister, 22);;
gap> m := MakeEchTestMatrix(GF(7),1000,200);;
gap> b := BaseMat(m);
< matrix 100x1000 : <MTX64 GF(7)>>
gap> RankMat(b);
100
gap> Reset(GlobalMersenneTwister, 19);;
gap> m1 := MTX64_RandomMat(MTX64_FiniteField(181), 60, 100);;
gap> m2 := MTX64_RandomMat(MTX64_FiniteField(181), 59, 100);;
gap> sim := SumIntersectionMat(m1, m2);
[ < matrix 100x100 : <MTX64 GF(181)>>, < matrix 19x100 : <MTX64 GF(181)>> ]
gap> IsOne(sim[1]);
true
gap> Display(sim[2]);
   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  \
37 139 160  73  23  62 150  33  24 180  88  71 144  38   1  20 132  74  20 112\
  77  47  34 135 139  91 141  34  88  56  17  70  41  49 145  26 126 118 120  \
32  54 141  77  36 105 122   3 169  89  21   4   8 117 149 130 163  45 127 159\
 147 128  30 124  30  11 103  99  25  11 148 148 107  15  70  41 177  58 139  \
83 149  73
   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
22 137 166 152 179  80 156  46  96 130 126  21  15  81 169  70 136  37 136 105\
 157  30 116  13   6 118  78 115  94 107  33  73  70  28 165  42 176 162  22  \
43  70  90  56 132 105  93 119 177  30 144  68 159 168  53  48  26   1  46 164\
  56  45 152  95  64 148 113 144  55 130  74 152 180  45  93 129 150 136  71  \
60 153   4
   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  \
31  60  45 160 149 151  42  19  11  62   9  40  78  79 172  47  21  96 178 164\
 137 101  46  29  95  40  85  42  77  20  23   2 179  55 178  96 162  27  90 1\
70 144 154  92 125  79 117  72  81   4  32  42  17  87  34 132  25  80 167  90\
  74 138  75 157   5 114 139 126 151  53  61  74  27  97  24 178 179 148 113  \
90  56  78
   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  \
74 156 147  13 115 113  22  22  87  26  43 170  30  83 135  18  68  78  18  65\
  14 110 104 137 110  26 143  39 118   4 133  20 111  58 154   8 138 113 132  \
81 127 130  54  74  72  77   6  75  79  92  59 133 173  68 130 171  90  46 148\
  56 122  14 110  76  18  10 114  14  34 125 107 104 105  39  24  41  39 141  \
76  14  88
   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
25  11 149  12 174 134 126 165  63 108  33  68  69 127 173 176 169 175  21 127\
  56  91  63 111 171  24  72  34  90 104 101  53   .  78 112  28  71 155 110  \
17  78  33   .  38  20  70  83  22  58 159  80  53 113  66 106 124 151   4 177\
 146  28 154 120 147  84  75  31 151 123  26  69  43  60  85 102 123  99  27  \
57  85  35
   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .   . 1\
23  61  83  84  17  52   6  69 140 117  86   9  56  77  19 108 129 119 107  43\
  67 154  67   1 131   6 159 176 134  47 166  36 102  36 130  19 159  73  55 1\
76 174 133  81  96 159  73 137 123 107  15  64  64  46   . 120 101 155  17 142\
 117  31 174 166 141 136  90  77  53  37  99 146 106  87  56  82  55   4   5  \
27   5  70
   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .   .  \
 9   8 135  68  90  28 164  22  13  55 163 158  47 115 119  86  89  99 104   7\
 177 135 142   5 129 137 107 110 141  16   9 177  78  46  97 122 119 146 157  \
82 132  59 106  43  56  13  14  10  98 126 147  38 134  90 116 131 135   7  81\
 129 130   9   2 117  46  79 113  28 134  50  68  28 112  25  88 170 176 164 1\
54 155  46
   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .   .  \
 8   8  13  21 105 101 170 139  27 102  92  38  76 155 179  44 137 124 107  79\
  99  57 128 145 115 176   8 158  54  93  64 138 177 108  31  79 175 131  85 1\
47  82  23 168  10 127  17  28  27  58 145 125 134 141   6  59 158 159  54  58\
 107  41 171 168  34 168  70 168 149  30  85 145  12 172  47  90 150  47 161  \
37 155 132
   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   .   .  \
31  59   7  10 173 166 149 133   6  61  65 112   4  52  99  72  69  94  64 169\
  62  35  40  27 137  29  38  69  86 169 152  77  30 163  34   4 152  28  78 1\
24 175 109 132  77 116  13  53  22  22  39  45  60  12  26  59  38 148  35 162\
 140 151  33  72  83 155  61 152  90 147  51  10  23 117 147  64  70   3 126 1\
36  30 120
   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   .   . 1\
14  95  56 127  20  51  47 139  91  92  78 166  87 100 113  92 168  64  77   .\
  34  87  19   9 101 154  93  80 177  49  76 180  85 132  95 135 180  42  15 1\
35  31 110 161 154  41 101 130  57  18  76  81   5 148  91  88 179 172  67 164\
  24  74 122  99 161  31  24 115  29  32  25 104  28  87  71  64 139  39 164 1\
29  24 153
   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   .   . 1\
55   4 139  22  32  94 156  62 148  24 169 172  55 139  73  24 101 110 142 163\
 115  46   5  13 120 134 134  91  82  16  46 116  76  13 137 151 126  58  72  \
69  55  33 122  40 103   7  39  95 111  86 167 125 171  49 137 102 132 116  66\
  43  39 129 106 167  97  24 116  40  28  67 166 104  79  51  18  53 107  97 1\
31  17 163
   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   .   . 1\
43 119 142  52 124  63  84  55  57 123  38 115 179 109 157  47 132 110  79  42\
  49 124  97 104  73  44  43 121 172  53  59  79 139 128  17  31  26 177  42  \
75  74  83  35  28  47 179  46 140  82  27  64 137 151 158  19 180  51 104   2\
  84 115  13 133 116 116 129  39  45  45  17  62  68  77   2  86 173 175  15  \
19  32 103
   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .   . 1\
36  84 176  98  76  97 134 101  39   9  66  74  66   .  26  34  25   5  89 142\
  15 140  74 142 118 130 147 139 174  84 125  64 150  18  64  75  14  12  43  \
89 147  91  86 132 116 158  76 103  17  31 123 177  74 109 177 135 108 134  82\
  98  68  69  81  43 177  53  91  38 137 155  77 161 171 144  48  77  75  44  \
95  29 102
   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   .   .  \
25  63  36  47 154   8  82 147  26  95  45  55  70 128  67  85  49   4  92 106\
 139  88 167 135  70 117 131 160 170  18  26 106 175  70 113  26  69 114  67 1\
63  80 153  36  76  53 174 129  86  67 179 119  51  39  40   4  48 158  79  85\
 177  54 149  42  56   6 129 111 169 162  86  19  73 117 178 104 114  98 169 1\
19 110  51
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   .   . 1\
14   6  88 128  51 128  29  75 110  36  75  16  39  11  66   2  10 173 127 139\
  95 180  62 142 141  29  38 174  13   8  82 173 146 142  61  82 139  76 173  \
74  73 132 130  55 111  38 134  57 168  82  62 116  98  24  69 171 128  11 115\
  37  56  65 106 125  30 164 155 178 110  49 141   3  21  73  83 117 180 103  \
61  43 161
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   .   . 1\
34  52  96  24 148  27  51  76  53  26   7 145 168  37   6 106 112  26 162 114\
 111  58 141  29  54  46 112  20  65 162  35  42 169 126  86  71  50  51  59  \
97  28 151  70  96 157  32  51 100  28 179  16 108 101  87 125 120  96  17  26\
  22  80 172  97  73  39  53 122  45   3 149  26  76  86  66  83 157 172  90 1\
45  89  69
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .   . 1\
53  83  46 168  93  97  96 130  87 147 107 139 169 110  39  99  39 131 122 162\
 153 163  24  25 138  67 100 154  59  90 158 174 100 109 143 137  75 163 168  \
14  96  68 108   2 161  72  98 131  72 168 167  71  16  37  22 107  58  32 147\
   4  10  28 104 124 127 171 151 106   4 101 149  60  99 149 173  86 126  90 1\
75 150  28
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1   .  \
61  12  49 126 112  95  23  65  78  23  69 136   2 174  40  75 104 170  17  50\
  92 104  87  89 166 110  26  29 116   1 156 167 174  70  68   8  99  56  55 1\
15 138  32 131 168  66   .  68 108 113 144   9 171  26  96 106 137 173  20 135\
 179  34  74 113 102  65  15 115  51  89  33 131 172  28  65 164  37 135 165  \
16 105 121
   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   1 1\
78 138  43 180  11 174 160  89 141  51   7 102   8  25 161 143  99 154 146  58\
 133 164  54 178 139 155 154  84   8 104 167 139   1 151  88 125  54 152 153  \
31   .  12 175 131  52  87  79  41  29  28  10 165  47   1 100  74   .  43 117\
  49 146  96 119  16  19  82 159 177 168 168  43  23 101 133 176  90 162  73  \
51  17 133
gap> m3 := MTX64_RandomMat(MTX64_FiniteField(179), 30, 100);;
gap> m4 := MTX64_RandomMat(MTX64_FiniteField(181), 30, 101);;
gap> SumIntersectionMat(m1,m3);
Error, Matrices incompatible
gap> SumIntersectionMat(m1,m4);
Error, Matrices incompatible
gap> STOP_TEST("echelize.tst");
