gap> START_TEST("echelize.tst");
gap> Read(Filename(DirectoriesPackageLibrary("meataxe64","tst"),"testutils.g"));
gap> f := MTX64_FiniteField(3);
<MTX64 GF(3)>
gap> repeat m := MTX64_RandomMat(f,1000,1000); until RankMat(m) = 1000;
gap> m1 := ShallowCopy(m);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> m1[2] := m1[1];
< mutable compressed vector length 1000 over GF(3) >
gap> RankMat(m1);
999
gap> m1^-1;
fail
gap> m1 := ShallowCopy(m);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> m1[1000] := m1[1];
< mutable compressed vector length 1000 over GF(3) >
gap> RankMat(m1);
999
gap> m1^-1;               
fail
gap> for x in [[2,1000,2000],[3,2000,1000],[5,100,100],
>        [9,450,451],[13,100,110],[17, 250,200], [181, 500,501],
>        [257,300,310], [65537, 310, 300], [2^24, 20, 30],
>        [NextPrimeInt(2^32), 30,20], [11,1,1],[23,0,1],[16,1,0]] do
>         testEchelize(x[2],x[3],x[1], MTX64_Echelize_DefaultOptions);
>    od;
gap> Reset(GlobalMersenneTwister, 3);;
gap> m := MakeEchTestMatrix(GF(11^2), 1000,600);
< matrix 1000x1000 : <MTX64 GF(11^2)>>
gap> RankMat(m);
625
gap> e := MTX64_Echelize(m);
rec( cleaner := < matrix 375x625 : <MTX64 GF(11^2)>>, 
  colSelect := < MTX64 bitstring 625/1000>, det := <106 : <MTX64 GF(11^2)>>, 
  multiplier := < matrix 625x625 : <MTX64 GF(11^2)>>, rank := 625, 
  remnant := < matrix 625x375 : <MTX64 GF(11^2)>>, 
  rowSelect := < MTX64 bitstring 625/1000> )
gap> m2 := MakeEchTestMatrix(GF(11^2), 1000,600);
< matrix 1000x1000 : <MTX64 GF(11^2)>>
gap> MTX64_CleanExtend(e, m2);
< MTX64 bitstring 375/1000>
gap> e;
rec( cleaner := < matrix 1000x1000 : <MTX64 GF(11^2)>>, 
  colSelect := < MTX64 bitstring 1000/1000>, det := <106 : <MTX64 GF(11^2)>>, 
  multiplier := < matrix 1000x1000 : <MTX64 GF(11^2)>>, rank := 1000, 
  remnant := < matrix 1000x0 : <MTX64 GF(11^2)>>, 
  rowSelect := < MTX64 bitstring 1000/2000> )
gap> MTX64_GAPEchelize(MTX64_Matrix(Z(2)*[[0,0],[1,0]], 2), rec(failIfSingular := true));
fail
gap> Reset(GlobalMersenneTwister, 5);;
gap> f := MTX64_FiniteField(3);
<MTX64 GF(3)>
gap> m := MakeSparseMatrix(f,1000,1000,2);
< matrix 1000x1000 : <MTX64 GF(3)>>
gap> MTX64_GAPEchelize(m);
rec( cleaner := < matrix 308x692 : <MTX64 GF(3)>>, 
  colSelect := < MTX64 bitstring 692/1000>, 
  multiplier := < matrix 692x692 : <MTX64 GF(3)>>, rank := 692, 
  remnant := < matrix 692x308 : <MTX64 GF(3)>>, 
  rowSelect := < MTX64 bitstring 692/1000> )
gap> NullspaceMat(m);
< matrix 308x1000 : <MTX64 GF(3)>>
gap> n := NullspaceMat(m);
< matrix 308x1000 : <MTX64 GF(3)>>
gap> IsZero(n*m);
true
gap> SemiEchelonMatTransformation(m);
rec( coeffs := < matrix 692x1000 : <MTX64 GF(3)>>, 
  heads := [ 1, 0, 2, 3, 4, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 
      16, 17, 18, 0, 0, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 0, 0, 36, 37, 38, 0, 39, 40, 41, 42, 43, 0, 0, 44, 
      0, 0, 0, 0, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 0, 0, 55, 0, 0, 
      56, 0, 0, 57, 58, 0, 59, 60, 61, 62, 63, 64, 0, 0, 65, 66, 67, 68, 69, 
      0, 70, 71, 0, 72, 0, 73, 74, 75, 0, 76, 77, 78, 79, 0, 0, 80, 81, 82, 
      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100, 0, 101, 0, 102, 103, 104, 0, 105, 106, 107, 108, 109, 110, 111, 0, 
      112, 113, 114, 0, 115, 116, 0, 117, 0, 0, 118, 119, 120, 121, 122, 123, 
      0, 124, 125, 126, 127, 0, 128, 129, 0, 130, 0, 0, 131, 132, 133, 134, 
      135, 136, 137, 0, 138, 0, 139, 140, 0, 141, 142, 143, 144, 145, 0, 0, 
      146, 147, 148, 149, 150, 0, 151, 152, 0, 153, 154, 155, 156, 157, 0, 
      158, 159, 160, 161, 0, 162, 0, 163, 164, 165, 166, 0, 167, 168, 169, 
      170, 0, 0, 171, 0, 172, 173, 174, 0, 175, 176, 177, 178, 179, 180, 181, 
      0, 182, 0, 183, 0, 0, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 
      194, 0, 195, 196, 197, 198, 199, 0, 200, 201, 202, 203, 204, 205, 206, 
      207, 208, 209, 210, 0, 211, 212, 213, 214, 0, 215, 216, 217, 218, 0, 
      219, 0, 220, 221, 222, 223, 224, 0, 0, 225, 0, 226, 227, 228, 229, 230, 
      231, 232, 0, 233, 0, 234, 0, 235, 236, 237, 0, 0, 0, 0, 238, 0, 239, 
      240, 241, 0, 242, 243, 0, 244, 245, 0, 246, 247, 0, 248, 249, 250, 251, 
      0, 252, 0, 253, 254, 255, 256, 257, 258, 259, 0, 0, 260, 0, 0, 0, 261, 
      262, 263, 0, 264, 0, 265, 266, 267, 0, 268, 0, 0, 0, 269, 270, 271, 0, 
      0, 272, 273, 274, 0, 0, 275, 276, 277, 278, 0, 279, 0, 280, 0, 281, 
      282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 0, 293, 0, 294, 
      295, 0, 296, 297, 0, 298, 299, 300, 301, 0, 0, 0, 302, 303, 304, 305, 
      306, 307, 308, 0, 309, 310, 311, 0, 312, 313, 0, 314, 0, 315, 0, 316, 
      317, 318, 319, 320, 321, 322, 0, 323, 324, 0, 0, 325, 326, 0, 327, 328, 
      329, 330, 331, 0, 332, 0, 0, 333, 0, 0, 334, 335, 0, 336, 337, 338, 
      339, 340, 341, 342, 0, 343, 344, 345, 0, 346, 0, 0, 347, 348, 0, 349, 
      350, 0, 351, 352, 0, 353, 354, 355, 356, 357, 358, 359, 0, 0, 0, 360, 
      361, 362, 363, 364, 365, 0, 366, 367, 0, 368, 0, 0, 369, 370, 371, 0, 
      372, 373, 0, 0, 0, 374, 375, 0, 376, 0, 377, 0, 378, 379, 0, 380, 381, 
      382, 383, 0, 0, 0, 384, 385, 386, 387, 388, 389, 390, 0, 0, 391, 392, 
      393, 394, 0, 395, 396, 397, 0, 0, 398, 0, 399, 0, 400, 0, 0, 401, 402, 
      0, 403, 404, 405, 0, 406, 407, 408, 0, 0, 409, 410, 0, 411, 412, 413, 
      414, 415, 416, 0, 0, 0, 417, 418, 419, 0, 420, 421, 0, 422, 0, 423, 
      424, 0, 425, 0, 426, 427, 428, 0, 429, 430, 431, 432, 433, 0, 434, 0, 
      435, 436, 0, 0, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
      448, 449, 450, 451, 0, 452, 453, 454, 0, 0, 455, 0, 456, 457, 0, 0, 
      458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 0, 470, 
      471, 472, 0, 0, 473, 474, 475, 476, 0, 477, 0, 478, 479, 0, 480, 0, 
      481, 482, 0, 483, 484, 0, 0, 485, 486, 487, 0, 488, 0, 489, 490, 0, 
      491, 0, 0, 492, 493, 494, 495, 0, 0, 496, 497, 498, 0, 0, 0, 499, 500, 
      501, 0, 502, 0, 503, 504, 505, 0, 506, 507, 508, 509, 510, 511, 0, 512, 
      513, 514, 515, 516, 0, 517, 518, 519, 0, 0, 520, 521, 522, 0, 523, 524, 
      525, 0, 526, 527, 528, 529, 530, 531, 0, 0, 532, 533, 534, 535, 0, 0, 
      0, 536, 537, 0, 538, 539, 540, 0, 0, 541, 0, 542, 543, 544, 545, 546, 
      0, 547, 0, 0, 548, 549, 0, 550, 551, 0, 552, 553, 554, 555, 0, 556, 
      557, 558, 0, 0, 0, 559, 0, 0, 560, 561, 562, 563, 0, 564, 0, 0, 565, 
      566, 0, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 0, 0, 0, 
      0, 0, 0, 578, 0, 579, 580, 581, 582, 583, 0, 584, 585, 586, 587, 588, 
      589, 590, 591, 0, 592, 593, 0, 0, 594, 595, 596, 597, 0, 598, 0, 599, 
      600, 601, 602, 603, 604, 605, 606, 607, 0, 608, 0, 609, 610, 611, 612, 
      613, 614, 615, 0, 616, 0, 0, 617, 618, 619, 620, 621, 622, 0, 0, 623, 
      624, 625, 626, 627, 0, 0, 628, 0, 0, 629, 0, 0, 630, 631, 0, 632, 633, 
      634, 635, 0, 636, 0, 637, 0, 638, 639, 640, 0, 641, 0, 642, 643, 644, 
      0, 0, 645, 0, 0, 0, 0, 646, 647, 648, 649, 0, 650, 651, 652, 653, 0, 0, 
      654, 655, 656, 0, 0, 0, 657, 658, 659, 0, 0, 660, 0, 661, 0, 662, 663, 
      664, 665, 666, 0, 0, 667, 0, 0, 0, 0, 668, 0, 0, 669, 670, 671, 672, 
      673, 674, 0, 0, 675, 676, 677, 0, 678, 679, 0, 0, 0, 680, 681, 682, 
      683, 684, 0, 685, 0, 686, 0, 0, 0, 687, 688, 0, 689, 0, 0, 690, 691, 
      692 ], relations := < matrix 308x1000 : <MTX64 GF(3)>>, 
  vectors := < matrix 692x1000 : <MTX64 GF(3)>> )
gap> SemiEchelonMat(m);              
rec( heads := [ 1, 0, 2, 3, 4, 0, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 
      0, 16, 17, 18, 0, 0, 19, 20, 21, 22, 23, 24, 25, 0, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 0, 0, 36, 37, 38, 0, 39, 40, 41, 42, 43, 0, 0, 44, 
      0, 0, 0, 0, 45, 46, 0, 47, 48, 49, 50, 51, 52, 53, 54, 0, 0, 55, 0, 0, 
      56, 0, 0, 57, 58, 0, 59, 60, 61, 62, 63, 64, 0, 0, 65, 66, 67, 68, 69, 
      0, 70, 71, 0, 72, 0, 73, 74, 75, 0, 76, 77, 78, 79, 0, 0, 80, 81, 82, 
      83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
      100, 0, 101, 0, 102, 103, 104, 0, 105, 106, 107, 108, 109, 110, 111, 0, 
      112, 113, 114, 0, 115, 116, 0, 117, 0, 0, 118, 119, 120, 121, 122, 123, 
      0, 124, 125, 126, 127, 0, 128, 129, 0, 130, 0, 0, 131, 132, 133, 134, 
      135, 136, 137, 0, 138, 0, 139, 140, 0, 141, 142, 143, 144, 145, 0, 0, 
      146, 147, 148, 149, 150, 0, 151, 152, 0, 153, 154, 155, 156, 157, 0, 
      158, 159, 160, 161, 0, 162, 0, 163, 164, 165, 166, 0, 167, 168, 169, 
      170, 0, 0, 171, 0, 172, 173, 174, 0, 175, 176, 177, 178, 179, 180, 181, 
      0, 182, 0, 183, 0, 0, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 
      194, 0, 195, 196, 197, 198, 199, 0, 200, 201, 202, 203, 204, 205, 206, 
      207, 208, 209, 210, 0, 211, 212, 213, 214, 0, 215, 216, 217, 218, 0, 
      219, 0, 220, 221, 222, 223, 224, 0, 0, 225, 0, 226, 227, 228, 229, 230, 
      231, 232, 0, 233, 0, 234, 0, 235, 236, 237, 0, 0, 0, 0, 238, 0, 239, 
      240, 241, 0, 242, 243, 0, 244, 245, 0, 246, 247, 0, 248, 249, 250, 251, 
      0, 252, 0, 253, 254, 255, 256, 257, 258, 259, 0, 0, 260, 0, 0, 0, 261, 
      262, 263, 0, 264, 0, 265, 266, 267, 0, 268, 0, 0, 0, 269, 270, 271, 0, 
      0, 272, 273, 274, 0, 0, 275, 276, 277, 278, 0, 279, 0, 280, 0, 281, 
      282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 0, 293, 0, 294, 
      295, 0, 296, 297, 0, 298, 299, 300, 301, 0, 0, 0, 302, 303, 304, 305, 
      306, 307, 308, 0, 309, 310, 311, 0, 312, 313, 0, 314, 0, 315, 0, 316, 
      317, 318, 319, 320, 321, 322, 0, 323, 324, 0, 0, 325, 326, 0, 327, 328, 
      329, 330, 331, 0, 332, 0, 0, 333, 0, 0, 334, 335, 0, 336, 337, 338, 
      339, 340, 341, 342, 0, 343, 344, 345, 0, 346, 0, 0, 347, 348, 0, 349, 
      350, 0, 351, 352, 0, 353, 354, 355, 356, 357, 358, 359, 0, 0, 0, 360, 
      361, 362, 363, 364, 365, 0, 366, 367, 0, 368, 0, 0, 369, 370, 371, 0, 
      372, 373, 0, 0, 0, 374, 375, 0, 376, 0, 377, 0, 378, 379, 0, 380, 381, 
      382, 383, 0, 0, 0, 384, 385, 386, 387, 388, 389, 390, 0, 0, 391, 392, 
      393, 394, 0, 395, 396, 397, 0, 0, 398, 0, 399, 0, 400, 0, 0, 401, 402, 
      0, 403, 404, 405, 0, 406, 407, 408, 0, 0, 409, 410, 0, 411, 412, 413, 
      414, 415, 416, 0, 0, 0, 417, 418, 419, 0, 420, 421, 0, 422, 0, 423, 
      424, 0, 425, 0, 426, 427, 428, 0, 429, 430, 431, 432, 433, 0, 434, 0, 
      435, 436, 0, 0, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 
      448, 449, 450, 451, 0, 452, 453, 454, 0, 0, 455, 0, 456, 457, 0, 0, 
      458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 0, 470, 
      471, 472, 0, 0, 473, 474, 475, 476, 0, 477, 0, 478, 479, 0, 480, 0, 
      481, 482, 0, 483, 484, 0, 0, 485, 486, 487, 0, 488, 0, 489, 490, 0, 
      491, 0, 0, 492, 493, 494, 495, 0, 0, 496, 497, 498, 0, 0, 0, 499, 500, 
      501, 0, 502, 0, 503, 504, 505, 0, 506, 507, 508, 509, 510, 511, 0, 512, 
      513, 514, 515, 516, 0, 517, 518, 519, 0, 0, 520, 521, 522, 0, 523, 524, 
      525, 0, 526, 527, 528, 529, 530, 531, 0, 0, 532, 533, 534, 535, 0, 0, 
      0, 536, 537, 0, 538, 539, 540, 0, 0, 541, 0, 542, 543, 544, 545, 546, 
      0, 547, 0, 0, 548, 549, 0, 550, 551, 0, 552, 553, 554, 555, 0, 556, 
      557, 558, 0, 0, 0, 559, 0, 0, 560, 561, 562, 563, 0, 564, 0, 0, 565, 
      566, 0, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 0, 0, 0, 
      0, 0, 0, 578, 0, 579, 580, 581, 582, 583, 0, 584, 585, 586, 587, 588, 
      589, 590, 591, 0, 592, 593, 0, 0, 594, 595, 596, 597, 0, 598, 0, 599, 
      600, 601, 602, 603, 604, 605, 606, 607, 0, 608, 0, 609, 610, 611, 612, 
      613, 614, 615, 0, 616, 0, 0, 617, 618, 619, 620, 621, 622, 0, 0, 623, 
      624, 625, 626, 627, 0, 0, 628, 0, 0, 629, 0, 0, 630, 631, 0, 632, 633, 
      634, 635, 0, 636, 0, 637, 0, 638, 639, 640, 0, 641, 0, 642, 643, 644, 
      0, 0, 645, 0, 0, 0, 0, 646, 647, 648, 649, 0, 650, 651, 652, 653, 0, 0, 
      654, 655, 656, 0, 0, 0, 657, 658, 659, 0, 0, 660, 0, 661, 0, 662, 663, 
      664, 665, 666, 0, 0, 667, 0, 0, 0, 0, 668, 0, 0, 669, 670, 671, 672, 
      673, 674, 0, 0, 675, 676, 677, 0, 678, 679, 0, 0, 0, 680, 681, 682, 
      683, 684, 0, 685, 0, 686, 0, 0, 0, 687, 688, 0, 689, 0, 0, 690, 691, 
      692 ], vectors := < matrix 692x1000 : <MTX64 GF(3)>> )
gap> testSolutionMat(678,8);
gap> Reset(GlobalMersenneTwister, 11);;
gap> m := MakeSparseMatrix(MTX64_FiniteField(17), 50, 50,2);
< matrix 50x50 : <MTX64 GF(17)>>
gap> Display(TriangulizedMat(m));
  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  . 10  .  .
  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  . 12  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .\
  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
gap> STOP_TEST("echelize.tst");
